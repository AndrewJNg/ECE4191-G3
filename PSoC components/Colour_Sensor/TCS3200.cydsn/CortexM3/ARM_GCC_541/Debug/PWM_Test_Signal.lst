ARM GAS  C:\Users\ANDREW~1\AppData\Local\Temp\ccVPyEiU.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"PWM_Test_Signal.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.PWM_Test_Signal_Enable,"ax",%progbits
  20              		.align	2
  21              		.global	PWM_Test_Signal_Enable
  22              		.thumb
  23              		.thumb_func
  24              		.type	PWM_Test_Signal_Enable, %function
  25              	PWM_Test_Signal_Enable:
  26              	.LFB2:
  27              		.file 1 "Generated_Source\\PSoC5\\PWM_Test_Signal.c"
   1:Generated_Source\PSoC5/PWM_Test_Signal.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/PWM_Test_Signal.c **** * File Name: PWM_Test_Signal.c
   3:Generated_Source\PSoC5/PWM_Test_Signal.c **** * Version 3.30
   4:Generated_Source\PSoC5/PWM_Test_Signal.c **** *
   5:Generated_Source\PSoC5/PWM_Test_Signal.c **** * Description:
   6:Generated_Source\PSoC5/PWM_Test_Signal.c **** *  The PWM User Module consist of an 8 or 16-bit counter with two 8 or 16-bit
   7:Generated_Source\PSoC5/PWM_Test_Signal.c **** *  comparitors. Each instance of this user module is capable of generating
   8:Generated_Source\PSoC5/PWM_Test_Signal.c **** *  two PWM outputs with the same period. The pulse width is selectable between
   9:Generated_Source\PSoC5/PWM_Test_Signal.c **** *  1 and 255/65535. The period is selectable between 2 and 255/65536 clocks.
  10:Generated_Source\PSoC5/PWM_Test_Signal.c **** *  The compare value output may be configured to be active when the present
  11:Generated_Source\PSoC5/PWM_Test_Signal.c **** *  counter is less than or less than/equal to the compare value.
  12:Generated_Source\PSoC5/PWM_Test_Signal.c **** *  A terminal count output is also provided. It generates a pulse one clock
  13:Generated_Source\PSoC5/PWM_Test_Signal.c **** *  width wide when the counter is equal to zero.
  14:Generated_Source\PSoC5/PWM_Test_Signal.c **** *
  15:Generated_Source\PSoC5/PWM_Test_Signal.c **** * Note:
  16:Generated_Source\PSoC5/PWM_Test_Signal.c **** *
  17:Generated_Source\PSoC5/PWM_Test_Signal.c **** *******************************************************************************
  18:Generated_Source\PSoC5/PWM_Test_Signal.c **** * Copyright 2008-2014, Cypress Semiconductor Corporation.  All rights reserved.
  19:Generated_Source\PSoC5/PWM_Test_Signal.c **** * You may use this file only in accordance with the license, terms, conditions,
  20:Generated_Source\PSoC5/PWM_Test_Signal.c **** * disclaimers, and limitations in the end user license agreement accompanying
  21:Generated_Source\PSoC5/PWM_Test_Signal.c **** * the software package with which this file was provided.
  22:Generated_Source\PSoC5/PWM_Test_Signal.c **** ********************************************************************************/
  23:Generated_Source\PSoC5/PWM_Test_Signal.c **** 
  24:Generated_Source\PSoC5/PWM_Test_Signal.c **** #include "PWM_Test_Signal.h"
  25:Generated_Source\PSoC5/PWM_Test_Signal.c **** 
  26:Generated_Source\PSoC5/PWM_Test_Signal.c **** /* Error message for removed <resource> through optimization */
  27:Generated_Source\PSoC5/PWM_Test_Signal.c **** #ifdef PWM_Test_Signal_PWMUDB_genblk1_ctrlreg__REMOVED
  28:Generated_Source\PSoC5/PWM_Test_Signal.c ****     #error PWM_v3_30 detected with a constant 0 for the enable or \
  29:Generated_Source\PSoC5/PWM_Test_Signal.c ****          constant 1 for reset. This will prevent the component from operating.
  30:Generated_Source\PSoC5/PWM_Test_Signal.c **** #endif /* PWM_Test_Signal_PWMUDB_genblk1_ctrlreg__REMOVED */
ARM GAS  C:\Users\ANDREW~1\AppData\Local\Temp\ccVPyEiU.s 			page 2


  31:Generated_Source\PSoC5/PWM_Test_Signal.c **** 
  32:Generated_Source\PSoC5/PWM_Test_Signal.c **** uint8 PWM_Test_Signal_initVar = 0u;
  33:Generated_Source\PSoC5/PWM_Test_Signal.c **** 
  34:Generated_Source\PSoC5/PWM_Test_Signal.c **** 
  35:Generated_Source\PSoC5/PWM_Test_Signal.c **** /*******************************************************************************
  36:Generated_Source\PSoC5/PWM_Test_Signal.c **** * Function Name: PWM_Test_Signal_Start
  37:Generated_Source\PSoC5/PWM_Test_Signal.c **** ********************************************************************************
  38:Generated_Source\PSoC5/PWM_Test_Signal.c **** *
  39:Generated_Source\PSoC5/PWM_Test_Signal.c **** * Summary:
  40:Generated_Source\PSoC5/PWM_Test_Signal.c **** *  The start function initializes the pwm with the default values, the
  41:Generated_Source\PSoC5/PWM_Test_Signal.c **** *  enables the counter to begin counting.  It does not enable interrupts,
  42:Generated_Source\PSoC5/PWM_Test_Signal.c **** *  the EnableInt command should be called if interrupt generation is required.
  43:Generated_Source\PSoC5/PWM_Test_Signal.c **** *
  44:Generated_Source\PSoC5/PWM_Test_Signal.c **** * Parameters:
  45:Generated_Source\PSoC5/PWM_Test_Signal.c **** *  None
  46:Generated_Source\PSoC5/PWM_Test_Signal.c **** *
  47:Generated_Source\PSoC5/PWM_Test_Signal.c **** * Return:
  48:Generated_Source\PSoC5/PWM_Test_Signal.c **** *  None
  49:Generated_Source\PSoC5/PWM_Test_Signal.c **** *
  50:Generated_Source\PSoC5/PWM_Test_Signal.c **** * Global variables:
  51:Generated_Source\PSoC5/PWM_Test_Signal.c **** *  PWM_Test_Signal_initVar: Is modified when this function is called for the
  52:Generated_Source\PSoC5/PWM_Test_Signal.c **** *   first time. Is used to ensure that initialization happens only once.
  53:Generated_Source\PSoC5/PWM_Test_Signal.c **** *
  54:Generated_Source\PSoC5/PWM_Test_Signal.c **** *******************************************************************************/
  55:Generated_Source\PSoC5/PWM_Test_Signal.c **** void PWM_Test_Signal_Start(void) 
  56:Generated_Source\PSoC5/PWM_Test_Signal.c **** {
  57:Generated_Source\PSoC5/PWM_Test_Signal.c ****     /* If not Initialized then initialize all required hardware and software */
  58:Generated_Source\PSoC5/PWM_Test_Signal.c ****     if(PWM_Test_Signal_initVar == 0u)
  59:Generated_Source\PSoC5/PWM_Test_Signal.c ****     {
  60:Generated_Source\PSoC5/PWM_Test_Signal.c ****         PWM_Test_Signal_Init();
  61:Generated_Source\PSoC5/PWM_Test_Signal.c ****         PWM_Test_Signal_initVar = 1u;
  62:Generated_Source\PSoC5/PWM_Test_Signal.c ****     }
  63:Generated_Source\PSoC5/PWM_Test_Signal.c ****     PWM_Test_Signal_Enable();
  64:Generated_Source\PSoC5/PWM_Test_Signal.c **** 
  65:Generated_Source\PSoC5/PWM_Test_Signal.c **** }
  66:Generated_Source\PSoC5/PWM_Test_Signal.c **** 
  67:Generated_Source\PSoC5/PWM_Test_Signal.c **** 
  68:Generated_Source\PSoC5/PWM_Test_Signal.c **** /*******************************************************************************
  69:Generated_Source\PSoC5/PWM_Test_Signal.c **** * Function Name: PWM_Test_Signal_Init
  70:Generated_Source\PSoC5/PWM_Test_Signal.c **** ********************************************************************************
  71:Generated_Source\PSoC5/PWM_Test_Signal.c **** *
  72:Generated_Source\PSoC5/PWM_Test_Signal.c **** * Summary:
  73:Generated_Source\PSoC5/PWM_Test_Signal.c **** *  Initialize component's parameters to the parameters set by user in the
  74:Generated_Source\PSoC5/PWM_Test_Signal.c **** *  customizer of the component placed onto schematic. Usually called in
  75:Generated_Source\PSoC5/PWM_Test_Signal.c **** *  PWM_Test_Signal_Start().
  76:Generated_Source\PSoC5/PWM_Test_Signal.c **** *
  77:Generated_Source\PSoC5/PWM_Test_Signal.c **** * Parameters:
  78:Generated_Source\PSoC5/PWM_Test_Signal.c **** *  None
  79:Generated_Source\PSoC5/PWM_Test_Signal.c **** *
  80:Generated_Source\PSoC5/PWM_Test_Signal.c **** * Return:
  81:Generated_Source\PSoC5/PWM_Test_Signal.c **** *  None
  82:Generated_Source\PSoC5/PWM_Test_Signal.c **** *
  83:Generated_Source\PSoC5/PWM_Test_Signal.c **** *******************************************************************************/
  84:Generated_Source\PSoC5/PWM_Test_Signal.c **** void PWM_Test_Signal_Init(void) 
  85:Generated_Source\PSoC5/PWM_Test_Signal.c **** {
  86:Generated_Source\PSoC5/PWM_Test_Signal.c ****     #if (PWM_Test_Signal_UsingFixedFunction || PWM_Test_Signal_UseControl)
  87:Generated_Source\PSoC5/PWM_Test_Signal.c ****         uint8 ctrl;
ARM GAS  C:\Users\ANDREW~1\AppData\Local\Temp\ccVPyEiU.s 			page 3


  88:Generated_Source\PSoC5/PWM_Test_Signal.c ****     #endif /* (PWM_Test_Signal_UsingFixedFunction || PWM_Test_Signal_UseControl) */
  89:Generated_Source\PSoC5/PWM_Test_Signal.c **** 
  90:Generated_Source\PSoC5/PWM_Test_Signal.c ****     #if(!PWM_Test_Signal_UsingFixedFunction)
  91:Generated_Source\PSoC5/PWM_Test_Signal.c ****         #if(PWM_Test_Signal_UseStatus)
  92:Generated_Source\PSoC5/PWM_Test_Signal.c ****             /* Interrupt State Backup for Critical Region*/
  93:Generated_Source\PSoC5/PWM_Test_Signal.c ****             uint8 PWM_Test_Signal_interruptState;
  94:Generated_Source\PSoC5/PWM_Test_Signal.c ****         #endif /* (PWM_Test_Signal_UseStatus) */
  95:Generated_Source\PSoC5/PWM_Test_Signal.c ****     #endif /* (!PWM_Test_Signal_UsingFixedFunction) */
  96:Generated_Source\PSoC5/PWM_Test_Signal.c **** 
  97:Generated_Source\PSoC5/PWM_Test_Signal.c ****     #if (PWM_Test_Signal_UsingFixedFunction)
  98:Generated_Source\PSoC5/PWM_Test_Signal.c ****         /* You are allowed to write the compare value (FF only) */
  99:Generated_Source\PSoC5/PWM_Test_Signal.c ****         PWM_Test_Signal_CONTROL |= PWM_Test_Signal_CFG0_MODE;
 100:Generated_Source\PSoC5/PWM_Test_Signal.c ****         #if (PWM_Test_Signal_DeadBand2_4)
 101:Generated_Source\PSoC5/PWM_Test_Signal.c ****             PWM_Test_Signal_CONTROL |= PWM_Test_Signal_CFG0_DB;
 102:Generated_Source\PSoC5/PWM_Test_Signal.c ****         #endif /* (PWM_Test_Signal_DeadBand2_4) */
 103:Generated_Source\PSoC5/PWM_Test_Signal.c **** 
 104:Generated_Source\PSoC5/PWM_Test_Signal.c ****         ctrl = PWM_Test_Signal_CONTROL3 & ((uint8 )(~PWM_Test_Signal_CTRL_CMPMODE1_MASK));
 105:Generated_Source\PSoC5/PWM_Test_Signal.c ****         PWM_Test_Signal_CONTROL3 = ctrl | PWM_Test_Signal_DEFAULT_COMPARE1_MODE;
 106:Generated_Source\PSoC5/PWM_Test_Signal.c **** 
 107:Generated_Source\PSoC5/PWM_Test_Signal.c ****          /* Clear and Set SYNCTC and SYNCCMP bits of RT1 register */
 108:Generated_Source\PSoC5/PWM_Test_Signal.c ****         PWM_Test_Signal_RT1 &= ((uint8)(~PWM_Test_Signal_RT1_MASK));
 109:Generated_Source\PSoC5/PWM_Test_Signal.c ****         PWM_Test_Signal_RT1 |= PWM_Test_Signal_SYNC;
 110:Generated_Source\PSoC5/PWM_Test_Signal.c **** 
 111:Generated_Source\PSoC5/PWM_Test_Signal.c ****         /*Enable DSI Sync all all inputs of the PWM*/
 112:Generated_Source\PSoC5/PWM_Test_Signal.c ****         PWM_Test_Signal_RT1 &= ((uint8)(~PWM_Test_Signal_SYNCDSI_MASK));
 113:Generated_Source\PSoC5/PWM_Test_Signal.c ****         PWM_Test_Signal_RT1 |= PWM_Test_Signal_SYNCDSI_EN;
 114:Generated_Source\PSoC5/PWM_Test_Signal.c **** 
 115:Generated_Source\PSoC5/PWM_Test_Signal.c ****     #elif (PWM_Test_Signal_UseControl)
 116:Generated_Source\PSoC5/PWM_Test_Signal.c ****         /* Set the default compare mode defined in the parameter */
 117:Generated_Source\PSoC5/PWM_Test_Signal.c ****         ctrl = PWM_Test_Signal_CONTROL & ((uint8)(~PWM_Test_Signal_CTRL_CMPMODE2_MASK)) &
 118:Generated_Source\PSoC5/PWM_Test_Signal.c ****                 ((uint8)(~PWM_Test_Signal_CTRL_CMPMODE1_MASK));
 119:Generated_Source\PSoC5/PWM_Test_Signal.c ****         PWM_Test_Signal_CONTROL = ctrl | PWM_Test_Signal_DEFAULT_COMPARE2_MODE |
 120:Generated_Source\PSoC5/PWM_Test_Signal.c ****                                    PWM_Test_Signal_DEFAULT_COMPARE1_MODE;
 121:Generated_Source\PSoC5/PWM_Test_Signal.c ****     #endif /* (PWM_Test_Signal_UsingFixedFunction) */
 122:Generated_Source\PSoC5/PWM_Test_Signal.c **** 
 123:Generated_Source\PSoC5/PWM_Test_Signal.c ****     #if (!PWM_Test_Signal_UsingFixedFunction)
 124:Generated_Source\PSoC5/PWM_Test_Signal.c ****         #if (PWM_Test_Signal_Resolution == 8)
 125:Generated_Source\PSoC5/PWM_Test_Signal.c ****             /* Set FIFO 0 to 1 byte register for period*/
 126:Generated_Source\PSoC5/PWM_Test_Signal.c ****             PWM_Test_Signal_AUX_CONTROLDP0 |= (PWM_Test_Signal_AUX_CTRL_FIFO0_CLR);
 127:Generated_Source\PSoC5/PWM_Test_Signal.c ****         #else /* (PWM_Test_Signal_Resolution == 16)*/
 128:Generated_Source\PSoC5/PWM_Test_Signal.c ****             /* Set FIFO 0 to 1 byte register for period */
 129:Generated_Source\PSoC5/PWM_Test_Signal.c ****             PWM_Test_Signal_AUX_CONTROLDP0 |= (PWM_Test_Signal_AUX_CTRL_FIFO0_CLR);
 130:Generated_Source\PSoC5/PWM_Test_Signal.c ****             PWM_Test_Signal_AUX_CONTROLDP1 |= (PWM_Test_Signal_AUX_CTRL_FIFO0_CLR);
 131:Generated_Source\PSoC5/PWM_Test_Signal.c ****         #endif /* (PWM_Test_Signal_Resolution == 8) */
 132:Generated_Source\PSoC5/PWM_Test_Signal.c **** 
 133:Generated_Source\PSoC5/PWM_Test_Signal.c ****         PWM_Test_Signal_WriteCounter(PWM_Test_Signal_INIT_PERIOD_VALUE);
 134:Generated_Source\PSoC5/PWM_Test_Signal.c ****     #endif /* (!PWM_Test_Signal_UsingFixedFunction) */
 135:Generated_Source\PSoC5/PWM_Test_Signal.c **** 
 136:Generated_Source\PSoC5/PWM_Test_Signal.c ****     PWM_Test_Signal_WritePeriod(PWM_Test_Signal_INIT_PERIOD_VALUE);
 137:Generated_Source\PSoC5/PWM_Test_Signal.c **** 
 138:Generated_Source\PSoC5/PWM_Test_Signal.c ****         #if (PWM_Test_Signal_UseOneCompareMode)
 139:Generated_Source\PSoC5/PWM_Test_Signal.c ****             PWM_Test_Signal_WriteCompare(PWM_Test_Signal_INIT_COMPARE_VALUE1);
 140:Generated_Source\PSoC5/PWM_Test_Signal.c ****         #else
 141:Generated_Source\PSoC5/PWM_Test_Signal.c ****             PWM_Test_Signal_WriteCompare1(PWM_Test_Signal_INIT_COMPARE_VALUE1);
 142:Generated_Source\PSoC5/PWM_Test_Signal.c ****             PWM_Test_Signal_WriteCompare2(PWM_Test_Signal_INIT_COMPARE_VALUE2);
 143:Generated_Source\PSoC5/PWM_Test_Signal.c ****         #endif /* (PWM_Test_Signal_UseOneCompareMode) */
 144:Generated_Source\PSoC5/PWM_Test_Signal.c **** 
ARM GAS  C:\Users\ANDREW~1\AppData\Local\Temp\ccVPyEiU.s 			page 4


 145:Generated_Source\PSoC5/PWM_Test_Signal.c ****         #if (PWM_Test_Signal_KillModeMinTime)
 146:Generated_Source\PSoC5/PWM_Test_Signal.c ****             PWM_Test_Signal_WriteKillTime(PWM_Test_Signal_MinimumKillTime);
 147:Generated_Source\PSoC5/PWM_Test_Signal.c ****         #endif /* (PWM_Test_Signal_KillModeMinTime) */
 148:Generated_Source\PSoC5/PWM_Test_Signal.c **** 
 149:Generated_Source\PSoC5/PWM_Test_Signal.c ****         #if (PWM_Test_Signal_DeadBandUsed)
 150:Generated_Source\PSoC5/PWM_Test_Signal.c ****             PWM_Test_Signal_WriteDeadTime(PWM_Test_Signal_INIT_DEAD_TIME);
 151:Generated_Source\PSoC5/PWM_Test_Signal.c ****         #endif /* (PWM_Test_Signal_DeadBandUsed) */
 152:Generated_Source\PSoC5/PWM_Test_Signal.c **** 
 153:Generated_Source\PSoC5/PWM_Test_Signal.c ****     #if (PWM_Test_Signal_UseStatus || PWM_Test_Signal_UsingFixedFunction)
 154:Generated_Source\PSoC5/PWM_Test_Signal.c ****         PWM_Test_Signal_SetInterruptMode(PWM_Test_Signal_INIT_INTERRUPTS_MODE);
 155:Generated_Source\PSoC5/PWM_Test_Signal.c ****     #endif /* (PWM_Test_Signal_UseStatus || PWM_Test_Signal_UsingFixedFunction) */
 156:Generated_Source\PSoC5/PWM_Test_Signal.c **** 
 157:Generated_Source\PSoC5/PWM_Test_Signal.c ****     #if (PWM_Test_Signal_UsingFixedFunction)
 158:Generated_Source\PSoC5/PWM_Test_Signal.c ****         /* Globally Enable the Fixed Function Block chosen */
 159:Generated_Source\PSoC5/PWM_Test_Signal.c ****         PWM_Test_Signal_GLOBAL_ENABLE |= PWM_Test_Signal_BLOCK_EN_MASK;
 160:Generated_Source\PSoC5/PWM_Test_Signal.c ****         /* Set the Interrupt source to come from the status register */
 161:Generated_Source\PSoC5/PWM_Test_Signal.c ****         PWM_Test_Signal_CONTROL2 |= PWM_Test_Signal_CTRL2_IRQ_SEL;
 162:Generated_Source\PSoC5/PWM_Test_Signal.c ****     #else
 163:Generated_Source\PSoC5/PWM_Test_Signal.c ****         #if(PWM_Test_Signal_UseStatus)
 164:Generated_Source\PSoC5/PWM_Test_Signal.c **** 
 165:Generated_Source\PSoC5/PWM_Test_Signal.c ****             /* CyEnterCriticalRegion and CyExitCriticalRegion are used to mark following region cri
 166:Generated_Source\PSoC5/PWM_Test_Signal.c ****             /* Enter Critical Region*/
 167:Generated_Source\PSoC5/PWM_Test_Signal.c ****             PWM_Test_Signal_interruptState = CyEnterCriticalSection();
 168:Generated_Source\PSoC5/PWM_Test_Signal.c ****             /* Use the interrupt output of the status register for IRQ output */
 169:Generated_Source\PSoC5/PWM_Test_Signal.c ****             PWM_Test_Signal_STATUS_AUX_CTRL |= PWM_Test_Signal_STATUS_ACTL_INT_EN_MASK;
 170:Generated_Source\PSoC5/PWM_Test_Signal.c **** 
 171:Generated_Source\PSoC5/PWM_Test_Signal.c ****              /* Exit Critical Region*/
 172:Generated_Source\PSoC5/PWM_Test_Signal.c ****             CyExitCriticalSection(PWM_Test_Signal_interruptState);
 173:Generated_Source\PSoC5/PWM_Test_Signal.c **** 
 174:Generated_Source\PSoC5/PWM_Test_Signal.c ****             /* Clear the FIFO to enable the PWM_Test_Signal_STATUS_FIFOFULL
 175:Generated_Source\PSoC5/PWM_Test_Signal.c ****                    bit to be set on FIFO full. */
 176:Generated_Source\PSoC5/PWM_Test_Signal.c ****             PWM_Test_Signal_ClearFIFO();
 177:Generated_Source\PSoC5/PWM_Test_Signal.c ****         #endif /* (PWM_Test_Signal_UseStatus) */
 178:Generated_Source\PSoC5/PWM_Test_Signal.c ****     #endif /* (PWM_Test_Signal_UsingFixedFunction) */
 179:Generated_Source\PSoC5/PWM_Test_Signal.c **** }
 180:Generated_Source\PSoC5/PWM_Test_Signal.c **** 
 181:Generated_Source\PSoC5/PWM_Test_Signal.c **** 
 182:Generated_Source\PSoC5/PWM_Test_Signal.c **** /*******************************************************************************
 183:Generated_Source\PSoC5/PWM_Test_Signal.c **** * Function Name: PWM_Test_Signal_Enable
 184:Generated_Source\PSoC5/PWM_Test_Signal.c **** ********************************************************************************
 185:Generated_Source\PSoC5/PWM_Test_Signal.c **** *
 186:Generated_Source\PSoC5/PWM_Test_Signal.c **** * Summary:
 187:Generated_Source\PSoC5/PWM_Test_Signal.c **** *  Enables the PWM block operation
 188:Generated_Source\PSoC5/PWM_Test_Signal.c **** *
 189:Generated_Source\PSoC5/PWM_Test_Signal.c **** * Parameters:
 190:Generated_Source\PSoC5/PWM_Test_Signal.c **** *  None
 191:Generated_Source\PSoC5/PWM_Test_Signal.c **** *
 192:Generated_Source\PSoC5/PWM_Test_Signal.c **** * Return:
 193:Generated_Source\PSoC5/PWM_Test_Signal.c **** *  None
 194:Generated_Source\PSoC5/PWM_Test_Signal.c **** *
 195:Generated_Source\PSoC5/PWM_Test_Signal.c **** * Side Effects:
 196:Generated_Source\PSoC5/PWM_Test_Signal.c **** *  This works only if software enable mode is chosen
 197:Generated_Source\PSoC5/PWM_Test_Signal.c **** *
 198:Generated_Source\PSoC5/PWM_Test_Signal.c **** *******************************************************************************/
 199:Generated_Source\PSoC5/PWM_Test_Signal.c **** void PWM_Test_Signal_Enable(void) 
 200:Generated_Source\PSoC5/PWM_Test_Signal.c **** {
  28              		.loc 1 200 0
ARM GAS  C:\Users\ANDREW~1\AppData\Local\Temp\ccVPyEiU.s 			page 5


  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
 201:Generated_Source\PSoC5/PWM_Test_Signal.c ****     /* Globally Enable the Fixed Function Block chosen */
 202:Generated_Source\PSoC5/PWM_Test_Signal.c ****     #if (PWM_Test_Signal_UsingFixedFunction)
 203:Generated_Source\PSoC5/PWM_Test_Signal.c ****         PWM_Test_Signal_GLOBAL_ENABLE |= PWM_Test_Signal_BLOCK_EN_MASK;
 204:Generated_Source\PSoC5/PWM_Test_Signal.c ****         PWM_Test_Signal_GLOBAL_STBY_ENABLE |= PWM_Test_Signal_BLOCK_STBY_EN_MASK;
 205:Generated_Source\PSoC5/PWM_Test_Signal.c ****     #endif /* (PWM_Test_Signal_UsingFixedFunction) */
 206:Generated_Source\PSoC5/PWM_Test_Signal.c **** 
 207:Generated_Source\PSoC5/PWM_Test_Signal.c ****     /* Enable the PWM from the control register  */
 208:Generated_Source\PSoC5/PWM_Test_Signal.c ****     #if (PWM_Test_Signal_UseControl || PWM_Test_Signal_UsingFixedFunction)
 209:Generated_Source\PSoC5/PWM_Test_Signal.c ****         PWM_Test_Signal_CONTROL |= PWM_Test_Signal_CTRL_ENABLE;
  33              		.loc 1 209 0
  34 0000 024A     		ldr	r2, .L2
  35 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  36 0004 43F08003 		orr	r3, r3, #128
  37 0008 1370     		strb	r3, [r2]
  38 000a 7047     		bx	lr
  39              	.L3:
  40              		.align	2
  41              	.L2:
  42 000c 75650040 		.word	1073767797
  43              		.cfi_endproc
  44              	.LFE2:
  45              		.size	PWM_Test_Signal_Enable, .-PWM_Test_Signal_Enable
  46              		.section	.text.PWM_Test_Signal_Stop,"ax",%progbits
  47              		.align	2
  48              		.global	PWM_Test_Signal_Stop
  49              		.thumb
  50              		.thumb_func
  51              		.type	PWM_Test_Signal_Stop, %function
  52              	PWM_Test_Signal_Stop:
  53              	.LFB3:
 210:Generated_Source\PSoC5/PWM_Test_Signal.c ****     #endif /* (PWM_Test_Signal_UseControl || PWM_Test_Signal_UsingFixedFunction) */
 211:Generated_Source\PSoC5/PWM_Test_Signal.c **** }
 212:Generated_Source\PSoC5/PWM_Test_Signal.c **** 
 213:Generated_Source\PSoC5/PWM_Test_Signal.c **** 
 214:Generated_Source\PSoC5/PWM_Test_Signal.c **** /*******************************************************************************
 215:Generated_Source\PSoC5/PWM_Test_Signal.c **** * Function Name: PWM_Test_Signal_Stop
 216:Generated_Source\PSoC5/PWM_Test_Signal.c **** ********************************************************************************
 217:Generated_Source\PSoC5/PWM_Test_Signal.c **** *
 218:Generated_Source\PSoC5/PWM_Test_Signal.c **** * Summary:
 219:Generated_Source\PSoC5/PWM_Test_Signal.c **** *  The stop function halts the PWM, but does not change any modes or disable
 220:Generated_Source\PSoC5/PWM_Test_Signal.c **** *  interrupts.
 221:Generated_Source\PSoC5/PWM_Test_Signal.c **** *
 222:Generated_Source\PSoC5/PWM_Test_Signal.c **** * Parameters:
 223:Generated_Source\PSoC5/PWM_Test_Signal.c **** *  None
 224:Generated_Source\PSoC5/PWM_Test_Signal.c **** *
 225:Generated_Source\PSoC5/PWM_Test_Signal.c **** * Return:
 226:Generated_Source\PSoC5/PWM_Test_Signal.c **** *  None
 227:Generated_Source\PSoC5/PWM_Test_Signal.c **** *
 228:Generated_Source\PSoC5/PWM_Test_Signal.c **** * Side Effects:
 229:Generated_Source\PSoC5/PWM_Test_Signal.c **** *  If the Enable mode is set to Hardware only then this function
 230:Generated_Source\PSoC5/PWM_Test_Signal.c **** *  has no effect on the operation of the PWM
 231:Generated_Source\PSoC5/PWM_Test_Signal.c **** *
 232:Generated_Source\PSoC5/PWM_Test_Signal.c **** *******************************************************************************/
ARM GAS  C:\Users\ANDREW~1\AppData\Local\Temp\ccVPyEiU.s 			page 6


 233:Generated_Source\PSoC5/PWM_Test_Signal.c **** void PWM_Test_Signal_Stop(void) 
 234:Generated_Source\PSoC5/PWM_Test_Signal.c **** {
  54              		.loc 1 234 0
  55              		.cfi_startproc
  56              		@ args = 0, pretend = 0, frame = 0
  57              		@ frame_needed = 0, uses_anonymous_args = 0
  58              		@ link register save eliminated.
 235:Generated_Source\PSoC5/PWM_Test_Signal.c ****     #if (PWM_Test_Signal_UseControl || PWM_Test_Signal_UsingFixedFunction)
 236:Generated_Source\PSoC5/PWM_Test_Signal.c ****         PWM_Test_Signal_CONTROL &= ((uint8)(~PWM_Test_Signal_CTRL_ENABLE));
  59              		.loc 1 236 0
  60 0000 024A     		ldr	r2, .L5
  61 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  62 0004 03F07F03 		and	r3, r3, #127
  63 0008 1370     		strb	r3, [r2]
  64 000a 7047     		bx	lr
  65              	.L6:
  66              		.align	2
  67              	.L5:
  68 000c 75650040 		.word	1073767797
  69              		.cfi_endproc
  70              	.LFE3:
  71              		.size	PWM_Test_Signal_Stop, .-PWM_Test_Signal_Stop
  72              		.section	.text.PWM_Test_Signal_WriteCounter,"ax",%progbits
  73              		.align	2
  74              		.global	PWM_Test_Signal_WriteCounter
  75              		.thumb
  76              		.thumb_func
  77              		.type	PWM_Test_Signal_WriteCounter, %function
  78              	PWM_Test_Signal_WriteCounter:
  79              	.LFB4:
 237:Generated_Source\PSoC5/PWM_Test_Signal.c ****     #endif /* (PWM_Test_Signal_UseControl || PWM_Test_Signal_UsingFixedFunction) */
 238:Generated_Source\PSoC5/PWM_Test_Signal.c **** 
 239:Generated_Source\PSoC5/PWM_Test_Signal.c ****     /* Globally disable the Fixed Function Block chosen */
 240:Generated_Source\PSoC5/PWM_Test_Signal.c ****     #if (PWM_Test_Signal_UsingFixedFunction)
 241:Generated_Source\PSoC5/PWM_Test_Signal.c ****         PWM_Test_Signal_GLOBAL_ENABLE &= ((uint8)(~PWM_Test_Signal_BLOCK_EN_MASK));
 242:Generated_Source\PSoC5/PWM_Test_Signal.c ****         PWM_Test_Signal_GLOBAL_STBY_ENABLE &= ((uint8)(~PWM_Test_Signal_BLOCK_STBY_EN_MASK));
 243:Generated_Source\PSoC5/PWM_Test_Signal.c ****     #endif /* (PWM_Test_Signal_UsingFixedFunction) */
 244:Generated_Source\PSoC5/PWM_Test_Signal.c **** }
 245:Generated_Source\PSoC5/PWM_Test_Signal.c **** 
 246:Generated_Source\PSoC5/PWM_Test_Signal.c **** #if (PWM_Test_Signal_UseOneCompareMode)
 247:Generated_Source\PSoC5/PWM_Test_Signal.c ****     #if (PWM_Test_Signal_CompareMode1SW)
 248:Generated_Source\PSoC5/PWM_Test_Signal.c **** 
 249:Generated_Source\PSoC5/PWM_Test_Signal.c **** 
 250:Generated_Source\PSoC5/PWM_Test_Signal.c ****         /*******************************************************************************
 251:Generated_Source\PSoC5/PWM_Test_Signal.c ****         * Function Name: PWM_Test_Signal_SetCompareMode
 252:Generated_Source\PSoC5/PWM_Test_Signal.c ****         ********************************************************************************
 253:Generated_Source\PSoC5/PWM_Test_Signal.c ****         *
 254:Generated_Source\PSoC5/PWM_Test_Signal.c ****         * Summary:
 255:Generated_Source\PSoC5/PWM_Test_Signal.c ****         *  This function writes the Compare Mode for the pwm output when in Dither mode,
 256:Generated_Source\PSoC5/PWM_Test_Signal.c ****         *  Center Align Mode or One Output Mode.
 257:Generated_Source\PSoC5/PWM_Test_Signal.c ****         *
 258:Generated_Source\PSoC5/PWM_Test_Signal.c ****         * Parameters:
 259:Generated_Source\PSoC5/PWM_Test_Signal.c ****         *  comparemode:  The new compare mode for the PWM output. Use the compare types
 260:Generated_Source\PSoC5/PWM_Test_Signal.c ****         *                defined in the H file as input arguments.
 261:Generated_Source\PSoC5/PWM_Test_Signal.c ****         *
 262:Generated_Source\PSoC5/PWM_Test_Signal.c ****         * Return:
 263:Generated_Source\PSoC5/PWM_Test_Signal.c ****         *  None
ARM GAS  C:\Users\ANDREW~1\AppData\Local\Temp\ccVPyEiU.s 			page 7


 264:Generated_Source\PSoC5/PWM_Test_Signal.c ****         *
 265:Generated_Source\PSoC5/PWM_Test_Signal.c ****         *******************************************************************************/
 266:Generated_Source\PSoC5/PWM_Test_Signal.c ****         void PWM_Test_Signal_SetCompareMode(uint8 comparemode) 
 267:Generated_Source\PSoC5/PWM_Test_Signal.c ****         {
 268:Generated_Source\PSoC5/PWM_Test_Signal.c ****             #if(PWM_Test_Signal_UsingFixedFunction)
 269:Generated_Source\PSoC5/PWM_Test_Signal.c **** 
 270:Generated_Source\PSoC5/PWM_Test_Signal.c ****                 #if(0 != PWM_Test_Signal_CTRL_CMPMODE1_SHIFT)
 271:Generated_Source\PSoC5/PWM_Test_Signal.c ****                     uint8 comparemodemasked = ((uint8)((uint8)comparemode << PWM_Test_Signal_CTRL_C
 272:Generated_Source\PSoC5/PWM_Test_Signal.c ****                 #else
 273:Generated_Source\PSoC5/PWM_Test_Signal.c ****                     uint8 comparemodemasked = comparemode;
 274:Generated_Source\PSoC5/PWM_Test_Signal.c ****                 #endif /* (0 != PWM_Test_Signal_CTRL_CMPMODE1_SHIFT) */
 275:Generated_Source\PSoC5/PWM_Test_Signal.c **** 
 276:Generated_Source\PSoC5/PWM_Test_Signal.c ****                 PWM_Test_Signal_CONTROL3 &= ((uint8)(~PWM_Test_Signal_CTRL_CMPMODE1_MASK)); /*Clear
 277:Generated_Source\PSoC5/PWM_Test_Signal.c ****                 PWM_Test_Signal_CONTROL3 |= comparemodemasked;
 278:Generated_Source\PSoC5/PWM_Test_Signal.c **** 
 279:Generated_Source\PSoC5/PWM_Test_Signal.c ****             #elif (PWM_Test_Signal_UseControl)
 280:Generated_Source\PSoC5/PWM_Test_Signal.c **** 
 281:Generated_Source\PSoC5/PWM_Test_Signal.c ****                 #if(0 != PWM_Test_Signal_CTRL_CMPMODE1_SHIFT)
 282:Generated_Source\PSoC5/PWM_Test_Signal.c ****                     uint8 comparemode1masked = ((uint8)((uint8)comparemode << PWM_Test_Signal_CTRL_
 283:Generated_Source\PSoC5/PWM_Test_Signal.c ****                                                 PWM_Test_Signal_CTRL_CMPMODE1_MASK;
 284:Generated_Source\PSoC5/PWM_Test_Signal.c ****                 #else
 285:Generated_Source\PSoC5/PWM_Test_Signal.c ****                     uint8 comparemode1masked = comparemode & PWM_Test_Signal_CTRL_CMPMODE1_MASK;
 286:Generated_Source\PSoC5/PWM_Test_Signal.c ****                 #endif /* (0 != PWM_Test_Signal_CTRL_CMPMODE1_SHIFT) */
 287:Generated_Source\PSoC5/PWM_Test_Signal.c **** 
 288:Generated_Source\PSoC5/PWM_Test_Signal.c ****                 #if(0 != PWM_Test_Signal_CTRL_CMPMODE2_SHIFT)
 289:Generated_Source\PSoC5/PWM_Test_Signal.c ****                     uint8 comparemode2masked = ((uint8)((uint8)comparemode << PWM_Test_Signal_CTRL_
 290:Generated_Source\PSoC5/PWM_Test_Signal.c ****                                                PWM_Test_Signal_CTRL_CMPMODE2_MASK;
 291:Generated_Source\PSoC5/PWM_Test_Signal.c ****                 #else
 292:Generated_Source\PSoC5/PWM_Test_Signal.c ****                     uint8 comparemode2masked = comparemode & PWM_Test_Signal_CTRL_CMPMODE2_MASK;
 293:Generated_Source\PSoC5/PWM_Test_Signal.c ****                 #endif /* (0 != PWM_Test_Signal_CTRL_CMPMODE2_SHIFT) */
 294:Generated_Source\PSoC5/PWM_Test_Signal.c **** 
 295:Generated_Source\PSoC5/PWM_Test_Signal.c ****                 /*Clear existing mode */
 296:Generated_Source\PSoC5/PWM_Test_Signal.c ****                 PWM_Test_Signal_CONTROL &= ((uint8)(~(PWM_Test_Signal_CTRL_CMPMODE1_MASK |
 297:Generated_Source\PSoC5/PWM_Test_Signal.c ****                                             PWM_Test_Signal_CTRL_CMPMODE2_MASK)));
 298:Generated_Source\PSoC5/PWM_Test_Signal.c ****                 PWM_Test_Signal_CONTROL |= (comparemode1masked | comparemode2masked);
 299:Generated_Source\PSoC5/PWM_Test_Signal.c **** 
 300:Generated_Source\PSoC5/PWM_Test_Signal.c ****             #else
 301:Generated_Source\PSoC5/PWM_Test_Signal.c ****                 uint8 temp = comparemode;
 302:Generated_Source\PSoC5/PWM_Test_Signal.c ****             #endif /* (PWM_Test_Signal_UsingFixedFunction) */
 303:Generated_Source\PSoC5/PWM_Test_Signal.c ****         }
 304:Generated_Source\PSoC5/PWM_Test_Signal.c ****     #endif /* PWM_Test_Signal_CompareMode1SW */
 305:Generated_Source\PSoC5/PWM_Test_Signal.c **** 
 306:Generated_Source\PSoC5/PWM_Test_Signal.c **** #else /* UseOneCompareMode */
 307:Generated_Source\PSoC5/PWM_Test_Signal.c **** 
 308:Generated_Source\PSoC5/PWM_Test_Signal.c ****     #if (PWM_Test_Signal_CompareMode1SW)
 309:Generated_Source\PSoC5/PWM_Test_Signal.c **** 
 310:Generated_Source\PSoC5/PWM_Test_Signal.c **** 
 311:Generated_Source\PSoC5/PWM_Test_Signal.c ****         /*******************************************************************************
 312:Generated_Source\PSoC5/PWM_Test_Signal.c ****         * Function Name: PWM_Test_Signal_SetCompareMode1
 313:Generated_Source\PSoC5/PWM_Test_Signal.c ****         ********************************************************************************
 314:Generated_Source\PSoC5/PWM_Test_Signal.c ****         *
 315:Generated_Source\PSoC5/PWM_Test_Signal.c ****         * Summary:
 316:Generated_Source\PSoC5/PWM_Test_Signal.c ****         *  This function writes the Compare Mode for the pwm or pwm1 output
 317:Generated_Source\PSoC5/PWM_Test_Signal.c ****         *
 318:Generated_Source\PSoC5/PWM_Test_Signal.c ****         * Parameters:
 319:Generated_Source\PSoC5/PWM_Test_Signal.c ****         *  comparemode:  The new compare mode for the PWM output. Use the compare types
 320:Generated_Source\PSoC5/PWM_Test_Signal.c ****         *                defined in the H file as input arguments.
ARM GAS  C:\Users\ANDREW~1\AppData\Local\Temp\ccVPyEiU.s 			page 8


 321:Generated_Source\PSoC5/PWM_Test_Signal.c ****         *
 322:Generated_Source\PSoC5/PWM_Test_Signal.c ****         * Return:
 323:Generated_Source\PSoC5/PWM_Test_Signal.c ****         *  None
 324:Generated_Source\PSoC5/PWM_Test_Signal.c ****         *
 325:Generated_Source\PSoC5/PWM_Test_Signal.c ****         *******************************************************************************/
 326:Generated_Source\PSoC5/PWM_Test_Signal.c ****         void PWM_Test_Signal_SetCompareMode1(uint8 comparemode) 
 327:Generated_Source\PSoC5/PWM_Test_Signal.c ****         {
 328:Generated_Source\PSoC5/PWM_Test_Signal.c ****             #if(0 != PWM_Test_Signal_CTRL_CMPMODE1_SHIFT)
 329:Generated_Source\PSoC5/PWM_Test_Signal.c ****                 uint8 comparemodemasked = ((uint8)((uint8)comparemode << PWM_Test_Signal_CTRL_CMPMO
 330:Generated_Source\PSoC5/PWM_Test_Signal.c ****                                            PWM_Test_Signal_CTRL_CMPMODE1_MASK;
 331:Generated_Source\PSoC5/PWM_Test_Signal.c ****             #else
 332:Generated_Source\PSoC5/PWM_Test_Signal.c ****                 uint8 comparemodemasked = comparemode & PWM_Test_Signal_CTRL_CMPMODE1_MASK;
 333:Generated_Source\PSoC5/PWM_Test_Signal.c ****             #endif /* (0 != PWM_Test_Signal_CTRL_CMPMODE1_SHIFT) */
 334:Generated_Source\PSoC5/PWM_Test_Signal.c **** 
 335:Generated_Source\PSoC5/PWM_Test_Signal.c ****             #if (PWM_Test_Signal_UseControl)
 336:Generated_Source\PSoC5/PWM_Test_Signal.c ****                 PWM_Test_Signal_CONTROL &= ((uint8)(~PWM_Test_Signal_CTRL_CMPMODE1_MASK)); /*Clear 
 337:Generated_Source\PSoC5/PWM_Test_Signal.c ****                 PWM_Test_Signal_CONTROL |= comparemodemasked;
 338:Generated_Source\PSoC5/PWM_Test_Signal.c ****             #endif /* (PWM_Test_Signal_UseControl) */
 339:Generated_Source\PSoC5/PWM_Test_Signal.c ****         }
 340:Generated_Source\PSoC5/PWM_Test_Signal.c ****     #endif /* PWM_Test_Signal_CompareMode1SW */
 341:Generated_Source\PSoC5/PWM_Test_Signal.c **** 
 342:Generated_Source\PSoC5/PWM_Test_Signal.c **** #if (PWM_Test_Signal_CompareMode2SW)
 343:Generated_Source\PSoC5/PWM_Test_Signal.c **** 
 344:Generated_Source\PSoC5/PWM_Test_Signal.c **** 
 345:Generated_Source\PSoC5/PWM_Test_Signal.c ****     /*******************************************************************************
 346:Generated_Source\PSoC5/PWM_Test_Signal.c ****     * Function Name: PWM_Test_Signal_SetCompareMode2
 347:Generated_Source\PSoC5/PWM_Test_Signal.c ****     ********************************************************************************
 348:Generated_Source\PSoC5/PWM_Test_Signal.c ****     *
 349:Generated_Source\PSoC5/PWM_Test_Signal.c ****     * Summary:
 350:Generated_Source\PSoC5/PWM_Test_Signal.c ****     *  This function writes the Compare Mode for the pwm or pwm2 output
 351:Generated_Source\PSoC5/PWM_Test_Signal.c ****     *
 352:Generated_Source\PSoC5/PWM_Test_Signal.c ****     * Parameters:
 353:Generated_Source\PSoC5/PWM_Test_Signal.c ****     *  comparemode:  The new compare mode for the PWM output. Use the compare types
 354:Generated_Source\PSoC5/PWM_Test_Signal.c ****     *                defined in the H file as input arguments.
 355:Generated_Source\PSoC5/PWM_Test_Signal.c ****     *
 356:Generated_Source\PSoC5/PWM_Test_Signal.c ****     * Return:
 357:Generated_Source\PSoC5/PWM_Test_Signal.c ****     *  None
 358:Generated_Source\PSoC5/PWM_Test_Signal.c ****     *
 359:Generated_Source\PSoC5/PWM_Test_Signal.c ****     *******************************************************************************/
 360:Generated_Source\PSoC5/PWM_Test_Signal.c ****     void PWM_Test_Signal_SetCompareMode2(uint8 comparemode) 
 361:Generated_Source\PSoC5/PWM_Test_Signal.c ****     {
 362:Generated_Source\PSoC5/PWM_Test_Signal.c **** 
 363:Generated_Source\PSoC5/PWM_Test_Signal.c ****         #if(0 != PWM_Test_Signal_CTRL_CMPMODE2_SHIFT)
 364:Generated_Source\PSoC5/PWM_Test_Signal.c ****             uint8 comparemodemasked = ((uint8)((uint8)comparemode << PWM_Test_Signal_CTRL_CMPMODE2_
 365:Generated_Source\PSoC5/PWM_Test_Signal.c ****                                                  PWM_Test_Signal_CTRL_CMPMODE2_MASK;
 366:Generated_Source\PSoC5/PWM_Test_Signal.c ****         #else
 367:Generated_Source\PSoC5/PWM_Test_Signal.c ****             uint8 comparemodemasked = comparemode & PWM_Test_Signal_CTRL_CMPMODE2_MASK;
 368:Generated_Source\PSoC5/PWM_Test_Signal.c ****         #endif /* (0 != PWM_Test_Signal_CTRL_CMPMODE2_SHIFT) */
 369:Generated_Source\PSoC5/PWM_Test_Signal.c **** 
 370:Generated_Source\PSoC5/PWM_Test_Signal.c ****         #if (PWM_Test_Signal_UseControl)
 371:Generated_Source\PSoC5/PWM_Test_Signal.c ****             PWM_Test_Signal_CONTROL &= ((uint8)(~PWM_Test_Signal_CTRL_CMPMODE2_MASK)); /*Clear exis
 372:Generated_Source\PSoC5/PWM_Test_Signal.c ****             PWM_Test_Signal_CONTROL |= comparemodemasked;
 373:Generated_Source\PSoC5/PWM_Test_Signal.c ****         #endif /* (PWM_Test_Signal_UseControl) */
 374:Generated_Source\PSoC5/PWM_Test_Signal.c ****     }
 375:Generated_Source\PSoC5/PWM_Test_Signal.c ****     #endif /*PWM_Test_Signal_CompareMode2SW */
 376:Generated_Source\PSoC5/PWM_Test_Signal.c **** 
 377:Generated_Source\PSoC5/PWM_Test_Signal.c **** #endif /* UseOneCompareMode */
ARM GAS  C:\Users\ANDREW~1\AppData\Local\Temp\ccVPyEiU.s 			page 9


 378:Generated_Source\PSoC5/PWM_Test_Signal.c **** 
 379:Generated_Source\PSoC5/PWM_Test_Signal.c **** 
 380:Generated_Source\PSoC5/PWM_Test_Signal.c **** #if (!PWM_Test_Signal_UsingFixedFunction)
 381:Generated_Source\PSoC5/PWM_Test_Signal.c **** 
 382:Generated_Source\PSoC5/PWM_Test_Signal.c **** 
 383:Generated_Source\PSoC5/PWM_Test_Signal.c ****     /*******************************************************************************
 384:Generated_Source\PSoC5/PWM_Test_Signal.c ****     * Function Name: PWM_Test_Signal_WriteCounter
 385:Generated_Source\PSoC5/PWM_Test_Signal.c ****     ********************************************************************************
 386:Generated_Source\PSoC5/PWM_Test_Signal.c ****     *
 387:Generated_Source\PSoC5/PWM_Test_Signal.c ****     * Summary:
 388:Generated_Source\PSoC5/PWM_Test_Signal.c ****     *  Writes a new counter value directly to the counter register. This will be
 389:Generated_Source\PSoC5/PWM_Test_Signal.c ****     *  implemented for that currently running period and only that period. This API
 390:Generated_Source\PSoC5/PWM_Test_Signal.c ****     *  is valid only for UDB implementation and not available for fixed function
 391:Generated_Source\PSoC5/PWM_Test_Signal.c ****     *  PWM implementation.
 392:Generated_Source\PSoC5/PWM_Test_Signal.c ****     *
 393:Generated_Source\PSoC5/PWM_Test_Signal.c ****     * Parameters:
 394:Generated_Source\PSoC5/PWM_Test_Signal.c ****     *  counter:  The period new period counter value.
 395:Generated_Source\PSoC5/PWM_Test_Signal.c ****     *
 396:Generated_Source\PSoC5/PWM_Test_Signal.c ****     * Return:
 397:Generated_Source\PSoC5/PWM_Test_Signal.c ****     *  None
 398:Generated_Source\PSoC5/PWM_Test_Signal.c ****     *
 399:Generated_Source\PSoC5/PWM_Test_Signal.c ****     * Side Effects:
 400:Generated_Source\PSoC5/PWM_Test_Signal.c ****     *  The PWM Period will be reloaded when a counter value will be a zero
 401:Generated_Source\PSoC5/PWM_Test_Signal.c ****     *
 402:Generated_Source\PSoC5/PWM_Test_Signal.c ****     *******************************************************************************/
 403:Generated_Source\PSoC5/PWM_Test_Signal.c ****     void PWM_Test_Signal_WriteCounter(uint16 counter) \
 404:Generated_Source\PSoC5/PWM_Test_Signal.c ****                                        
 405:Generated_Source\PSoC5/PWM_Test_Signal.c ****     {
  80              		.loc 1 405 0
  81              		.cfi_startproc
  82              		@ args = 0, pretend = 0, frame = 0
  83              		@ frame_needed = 0, uses_anonymous_args = 0
  84              		@ link register save eliminated.
  85              	.LVL0:
 406:Generated_Source\PSoC5/PWM_Test_Signal.c ****         CY_SET_REG16(PWM_Test_Signal_COUNTER_LSB_PTR, counter);
  86              		.loc 1 406 0
  87 0000 014B     		ldr	r3, .L8
  88 0002 1880     		strh	r0, [r3]	@ movhi
  89 0004 7047     		bx	lr
  90              	.L9:
  91 0006 00BF     		.align	2
  92              	.L8:
  93 0008 086A0040 		.word	1073768968
  94              		.cfi_endproc
  95              	.LFE4:
  96              		.size	PWM_Test_Signal_WriteCounter, .-PWM_Test_Signal_WriteCounter
  97              		.section	.text.PWM_Test_Signal_ReadCounter,"ax",%progbits
  98              		.align	2
  99              		.global	PWM_Test_Signal_ReadCounter
 100              		.thumb
 101              		.thumb_func
 102              		.type	PWM_Test_Signal_ReadCounter, %function
 103              	PWM_Test_Signal_ReadCounter:
 104              	.LFB5:
 407:Generated_Source\PSoC5/PWM_Test_Signal.c ****     }
 408:Generated_Source\PSoC5/PWM_Test_Signal.c **** 
 409:Generated_Source\PSoC5/PWM_Test_Signal.c **** 
ARM GAS  C:\Users\ANDREW~1\AppData\Local\Temp\ccVPyEiU.s 			page 10


 410:Generated_Source\PSoC5/PWM_Test_Signal.c ****     /*******************************************************************************
 411:Generated_Source\PSoC5/PWM_Test_Signal.c ****     * Function Name: PWM_Test_Signal_ReadCounter
 412:Generated_Source\PSoC5/PWM_Test_Signal.c ****     ********************************************************************************
 413:Generated_Source\PSoC5/PWM_Test_Signal.c ****     *
 414:Generated_Source\PSoC5/PWM_Test_Signal.c ****     * Summary:
 415:Generated_Source\PSoC5/PWM_Test_Signal.c ****     *  This function returns the current value of the counter.  It doesn't matter
 416:Generated_Source\PSoC5/PWM_Test_Signal.c ****     *  if the counter is enabled or running.
 417:Generated_Source\PSoC5/PWM_Test_Signal.c ****     *
 418:Generated_Source\PSoC5/PWM_Test_Signal.c ****     * Parameters:
 419:Generated_Source\PSoC5/PWM_Test_Signal.c ****     *  None
 420:Generated_Source\PSoC5/PWM_Test_Signal.c ****     *
 421:Generated_Source\PSoC5/PWM_Test_Signal.c ****     * Return:
 422:Generated_Source\PSoC5/PWM_Test_Signal.c ****     *  The current value of the counter.
 423:Generated_Source\PSoC5/PWM_Test_Signal.c ****     *
 424:Generated_Source\PSoC5/PWM_Test_Signal.c ****     *******************************************************************************/
 425:Generated_Source\PSoC5/PWM_Test_Signal.c ****     uint16 PWM_Test_Signal_ReadCounter(void) 
 426:Generated_Source\PSoC5/PWM_Test_Signal.c ****     {
 105              		.loc 1 426 0
 106              		.cfi_startproc
 107              		@ args = 0, pretend = 0, frame = 0
 108              		@ frame_needed = 0, uses_anonymous_args = 0
 109              		@ link register save eliminated.
 427:Generated_Source\PSoC5/PWM_Test_Signal.c ****         /* Force capture by reading Accumulator */
 428:Generated_Source\PSoC5/PWM_Test_Signal.c ****         /* Must first do a software capture to be able to read the counter */
 429:Generated_Source\PSoC5/PWM_Test_Signal.c ****         /* It is up to the user code to make sure there isn't already captured data in the FIFO */
 430:Generated_Source\PSoC5/PWM_Test_Signal.c ****           (void)CY_GET_REG8(PWM_Test_Signal_COUNTERCAP_LSB_PTR_8BIT);
 110              		.loc 1 430 0
 111 0000 024B     		ldr	r3, .L11
 112 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 431:Generated_Source\PSoC5/PWM_Test_Signal.c **** 
 432:Generated_Source\PSoC5/PWM_Test_Signal.c ****         /* Read the data from the FIFO */
 433:Generated_Source\PSoC5/PWM_Test_Signal.c ****         return (CY_GET_REG16(PWM_Test_Signal_CAPTURE_LSB_PTR));
 113              		.loc 1 433 0
 114 0004 024B     		ldr	r3, .L11+4
 115 0006 1888     		ldrh	r0, [r3]
 434:Generated_Source\PSoC5/PWM_Test_Signal.c ****     }
 116              		.loc 1 434 0
 117 0008 80B2     		uxth	r0, r0
 118 000a 7047     		bx	lr
 119              	.L12:
 120              		.align	2
 121              	.L11:
 122 000c 14650040 		.word	1073767700
 123 0010 A86A0040 		.word	1073769128
 124              		.cfi_endproc
 125              	.LFE5:
 126              		.size	PWM_Test_Signal_ReadCounter, .-PWM_Test_Signal_ReadCounter
 127              		.section	.text.PWM_Test_Signal_WritePeriod,"ax",%progbits
 128              		.align	2
 129              		.global	PWM_Test_Signal_WritePeriod
 130              		.thumb
 131              		.thumb_func
 132              		.type	PWM_Test_Signal_WritePeriod, %function
 133              	PWM_Test_Signal_WritePeriod:
 134              	.LFB6:
 435:Generated_Source\PSoC5/PWM_Test_Signal.c **** 
 436:Generated_Source\PSoC5/PWM_Test_Signal.c ****     #if (PWM_Test_Signal_UseStatus)
ARM GAS  C:\Users\ANDREW~1\AppData\Local\Temp\ccVPyEiU.s 			page 11


 437:Generated_Source\PSoC5/PWM_Test_Signal.c **** 
 438:Generated_Source\PSoC5/PWM_Test_Signal.c **** 
 439:Generated_Source\PSoC5/PWM_Test_Signal.c ****         /*******************************************************************************
 440:Generated_Source\PSoC5/PWM_Test_Signal.c ****         * Function Name: PWM_Test_Signal_ClearFIFO
 441:Generated_Source\PSoC5/PWM_Test_Signal.c ****         ********************************************************************************
 442:Generated_Source\PSoC5/PWM_Test_Signal.c ****         *
 443:Generated_Source\PSoC5/PWM_Test_Signal.c ****         * Summary:
 444:Generated_Source\PSoC5/PWM_Test_Signal.c ****         *  This function clears all capture data from the capture FIFO
 445:Generated_Source\PSoC5/PWM_Test_Signal.c ****         *
 446:Generated_Source\PSoC5/PWM_Test_Signal.c ****         * Parameters:
 447:Generated_Source\PSoC5/PWM_Test_Signal.c ****         *  None
 448:Generated_Source\PSoC5/PWM_Test_Signal.c ****         *
 449:Generated_Source\PSoC5/PWM_Test_Signal.c ****         * Return:
 450:Generated_Source\PSoC5/PWM_Test_Signal.c ****         *  None
 451:Generated_Source\PSoC5/PWM_Test_Signal.c ****         *
 452:Generated_Source\PSoC5/PWM_Test_Signal.c ****         *******************************************************************************/
 453:Generated_Source\PSoC5/PWM_Test_Signal.c ****         void PWM_Test_Signal_ClearFIFO(void) 
 454:Generated_Source\PSoC5/PWM_Test_Signal.c ****         {
 455:Generated_Source\PSoC5/PWM_Test_Signal.c ****             while(0u != (PWM_Test_Signal_ReadStatusRegister() & PWM_Test_Signal_STATUS_FIFONEMPTY))
 456:Generated_Source\PSoC5/PWM_Test_Signal.c ****             {
 457:Generated_Source\PSoC5/PWM_Test_Signal.c ****                 (void)PWM_Test_Signal_ReadCapture();
 458:Generated_Source\PSoC5/PWM_Test_Signal.c ****             }
 459:Generated_Source\PSoC5/PWM_Test_Signal.c ****         }
 460:Generated_Source\PSoC5/PWM_Test_Signal.c **** 
 461:Generated_Source\PSoC5/PWM_Test_Signal.c ****     #endif /* PWM_Test_Signal_UseStatus */
 462:Generated_Source\PSoC5/PWM_Test_Signal.c **** 
 463:Generated_Source\PSoC5/PWM_Test_Signal.c **** #endif /* !PWM_Test_Signal_UsingFixedFunction */
 464:Generated_Source\PSoC5/PWM_Test_Signal.c **** 
 465:Generated_Source\PSoC5/PWM_Test_Signal.c **** 
 466:Generated_Source\PSoC5/PWM_Test_Signal.c **** /*******************************************************************************
 467:Generated_Source\PSoC5/PWM_Test_Signal.c **** * Function Name: PWM_Test_Signal_WritePeriod
 468:Generated_Source\PSoC5/PWM_Test_Signal.c **** ********************************************************************************
 469:Generated_Source\PSoC5/PWM_Test_Signal.c **** *
 470:Generated_Source\PSoC5/PWM_Test_Signal.c **** * Summary:
 471:Generated_Source\PSoC5/PWM_Test_Signal.c **** *  This function is used to change the period of the counter.  The new period
 472:Generated_Source\PSoC5/PWM_Test_Signal.c **** *  will be loaded the next time terminal count is detected.
 473:Generated_Source\PSoC5/PWM_Test_Signal.c **** *
 474:Generated_Source\PSoC5/PWM_Test_Signal.c **** * Parameters:
 475:Generated_Source\PSoC5/PWM_Test_Signal.c **** *  period:  Period value. May be between 1 and (2^Resolution)-1.  A value of 0
 476:Generated_Source\PSoC5/PWM_Test_Signal.c **** *           will result in the counter remaining at zero.
 477:Generated_Source\PSoC5/PWM_Test_Signal.c **** *
 478:Generated_Source\PSoC5/PWM_Test_Signal.c **** * Return:
 479:Generated_Source\PSoC5/PWM_Test_Signal.c **** *  None
 480:Generated_Source\PSoC5/PWM_Test_Signal.c **** *
 481:Generated_Source\PSoC5/PWM_Test_Signal.c **** *******************************************************************************/
 482:Generated_Source\PSoC5/PWM_Test_Signal.c **** void PWM_Test_Signal_WritePeriod(uint16 period) 
 483:Generated_Source\PSoC5/PWM_Test_Signal.c **** {
 135              		.loc 1 483 0
 136              		.cfi_startproc
 137              		@ args = 0, pretend = 0, frame = 0
 138              		@ frame_needed = 0, uses_anonymous_args = 0
 139              		@ link register save eliminated.
 140              	.LVL1:
 484:Generated_Source\PSoC5/PWM_Test_Signal.c ****     #if(PWM_Test_Signal_UsingFixedFunction)
 485:Generated_Source\PSoC5/PWM_Test_Signal.c ****         CY_SET_REG16(PWM_Test_Signal_PERIOD_LSB_PTR, (uint16)period);
 486:Generated_Source\PSoC5/PWM_Test_Signal.c ****     #else
 487:Generated_Source\PSoC5/PWM_Test_Signal.c ****         CY_SET_REG16(PWM_Test_Signal_PERIOD_LSB_PTR, period);
ARM GAS  C:\Users\ANDREW~1\AppData\Local\Temp\ccVPyEiU.s 			page 12


 141              		.loc 1 487 0
 142 0000 014B     		ldr	r3, .L14
 143 0002 1880     		strh	r0, [r3]	@ movhi
 144 0004 7047     		bx	lr
 145              	.L15:
 146 0006 00BF     		.align	2
 147              	.L14:
 148 0008 886A0040 		.word	1073769096
 149              		.cfi_endproc
 150              	.LFE6:
 151              		.size	PWM_Test_Signal_WritePeriod, .-PWM_Test_Signal_WritePeriod
 152              		.section	.text.PWM_Test_Signal_WriteCompare,"ax",%progbits
 153              		.align	2
 154              		.global	PWM_Test_Signal_WriteCompare
 155              		.thumb
 156              		.thumb_func
 157              		.type	PWM_Test_Signal_WriteCompare, %function
 158              	PWM_Test_Signal_WriteCompare:
 159              	.LFB7:
 488:Generated_Source\PSoC5/PWM_Test_Signal.c ****     #endif /* (PWM_Test_Signal_UsingFixedFunction) */
 489:Generated_Source\PSoC5/PWM_Test_Signal.c **** }
 490:Generated_Source\PSoC5/PWM_Test_Signal.c **** 
 491:Generated_Source\PSoC5/PWM_Test_Signal.c **** #if (PWM_Test_Signal_UseOneCompareMode)
 492:Generated_Source\PSoC5/PWM_Test_Signal.c **** 
 493:Generated_Source\PSoC5/PWM_Test_Signal.c **** 
 494:Generated_Source\PSoC5/PWM_Test_Signal.c ****     /*******************************************************************************
 495:Generated_Source\PSoC5/PWM_Test_Signal.c ****     * Function Name: PWM_Test_Signal_WriteCompare
 496:Generated_Source\PSoC5/PWM_Test_Signal.c ****     ********************************************************************************
 497:Generated_Source\PSoC5/PWM_Test_Signal.c ****     *
 498:Generated_Source\PSoC5/PWM_Test_Signal.c ****     * Summary:
 499:Generated_Source\PSoC5/PWM_Test_Signal.c ****     *  This funtion is used to change the compare1 value when the PWM is in Dither
 500:Generated_Source\PSoC5/PWM_Test_Signal.c ****     *  mode. The compare output will reflect the new value on the next UDB clock.
 501:Generated_Source\PSoC5/PWM_Test_Signal.c ****     *  The compare output will be driven high when the present counter value is
 502:Generated_Source\PSoC5/PWM_Test_Signal.c ****     *  compared to the compare value based on the compare mode defined in
 503:Generated_Source\PSoC5/PWM_Test_Signal.c ****     *  Dither Mode.
 504:Generated_Source\PSoC5/PWM_Test_Signal.c ****     *
 505:Generated_Source\PSoC5/PWM_Test_Signal.c ****     * Parameters:
 506:Generated_Source\PSoC5/PWM_Test_Signal.c ****     *  compare:  New compare value.
 507:Generated_Source\PSoC5/PWM_Test_Signal.c ****     *
 508:Generated_Source\PSoC5/PWM_Test_Signal.c ****     * Return:
 509:Generated_Source\PSoC5/PWM_Test_Signal.c ****     *  None
 510:Generated_Source\PSoC5/PWM_Test_Signal.c ****     *
 511:Generated_Source\PSoC5/PWM_Test_Signal.c ****     * Side Effects:
 512:Generated_Source\PSoC5/PWM_Test_Signal.c ****     *  This function is only available if the PWM mode parameter is set to
 513:Generated_Source\PSoC5/PWM_Test_Signal.c ****     *  Dither Mode, Center Aligned Mode or One Output Mode
 514:Generated_Source\PSoC5/PWM_Test_Signal.c ****     *
 515:Generated_Source\PSoC5/PWM_Test_Signal.c ****     *******************************************************************************/
 516:Generated_Source\PSoC5/PWM_Test_Signal.c ****     void PWM_Test_Signal_WriteCompare(uint16 compare) \
 517:Generated_Source\PSoC5/PWM_Test_Signal.c ****                                        
 518:Generated_Source\PSoC5/PWM_Test_Signal.c ****     {
 160              		.loc 1 518 0
 161              		.cfi_startproc
 162              		@ args = 0, pretend = 0, frame = 0
 163              		@ frame_needed = 0, uses_anonymous_args = 0
 164              		@ link register save eliminated.
 165              	.LVL2:
 519:Generated_Source\PSoC5/PWM_Test_Signal.c ****         #if(PWM_Test_Signal_UsingFixedFunction)
ARM GAS  C:\Users\ANDREW~1\AppData\Local\Temp\ccVPyEiU.s 			page 13


 520:Generated_Source\PSoC5/PWM_Test_Signal.c ****             CY_SET_REG16(PWM_Test_Signal_COMPARE1_LSB_PTR, (uint16)compare);
 521:Generated_Source\PSoC5/PWM_Test_Signal.c ****         #else
 522:Generated_Source\PSoC5/PWM_Test_Signal.c ****             CY_SET_REG16(PWM_Test_Signal_COMPARE1_LSB_PTR, compare);
 166              		.loc 1 522 0
 167 0000 014B     		ldr	r3, .L17
 168 0002 1880     		strh	r0, [r3]	@ movhi
 169 0004 7047     		bx	lr
 170              	.L18:
 171 0006 00BF     		.align	2
 172              	.L17:
 173 0008 486A0040 		.word	1073769032
 174              		.cfi_endproc
 175              	.LFE7:
 176              		.size	PWM_Test_Signal_WriteCompare, .-PWM_Test_Signal_WriteCompare
 177              		.section	.text.PWM_Test_Signal_Init,"ax",%progbits
 178              		.align	2
 179              		.global	PWM_Test_Signal_Init
 180              		.thumb
 181              		.thumb_func
 182              		.type	PWM_Test_Signal_Init, %function
 183              	PWM_Test_Signal_Init:
 184              	.LFB1:
  85:Generated_Source\PSoC5/PWM_Test_Signal.c ****     #if (PWM_Test_Signal_UsingFixedFunction || PWM_Test_Signal_UseControl)
 185              		.loc 1 85 0
 186              		.cfi_startproc
 187              		@ args = 0, pretend = 0, frame = 0
 188              		@ frame_needed = 0, uses_anonymous_args = 0
 189 0000 08B5     		push	{r3, lr}
 190              		.cfi_def_cfa_offset 8
 191              		.cfi_offset 3, -8
 192              		.cfi_offset 14, -4
 117:Generated_Source\PSoC5/PWM_Test_Signal.c ****                 ((uint8)(~PWM_Test_Signal_CTRL_CMPMODE1_MASK));
 193              		.loc 1 117 0
 194 0002 0D4A     		ldr	r2, .L21
 195 0004 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 196 0006 03F0C003 		and	r3, r3, #192
 197              	.LVL3:
 119:Generated_Source\PSoC5/PWM_Test_Signal.c ****                                    PWM_Test_Signal_DEFAULT_COMPARE1_MODE;
 198              		.loc 1 119 0
 199 000a 43F00903 		orr	r3, r3, #9
 200              	.LVL4:
 201 000e 1370     		strb	r3, [r2]
 129:Generated_Source\PSoC5/PWM_Test_Signal.c ****             PWM_Test_Signal_AUX_CONTROLDP1 |= (PWM_Test_Signal_AUX_CTRL_FIFO0_CLR);
 202              		.loc 1 129 0
 203 0010 1F32     		adds	r2, r2, #31
 204 0012 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 205 0014 43F00103 		orr	r3, r3, #1
 206 0018 1370     		strb	r3, [r2]
 130:Generated_Source\PSoC5/PWM_Test_Signal.c ****         #endif /* (PWM_Test_Signal_Resolution == 8) */
 207              		.loc 1 130 0
 208 001a 0132     		adds	r2, r2, #1
 209 001c 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 210 001e 43F00103 		orr	r3, r3, #1
 211 0022 1370     		strb	r3, [r2]
 133:Generated_Source\PSoC5/PWM_Test_Signal.c ****     #endif /* (!PWM_Test_Signal_UsingFixedFunction) */
 212              		.loc 1 133 0
 213 0024 0920     		movs	r0, #9
ARM GAS  C:\Users\ANDREW~1\AppData\Local\Temp\ccVPyEiU.s 			page 14


 214 0026 FFF7FEFF 		bl	PWM_Test_Signal_WriteCounter
 215              	.LVL5:
 136:Generated_Source\PSoC5/PWM_Test_Signal.c **** 
 216              		.loc 1 136 0
 217 002a 0920     		movs	r0, #9
 218 002c FFF7FEFF 		bl	PWM_Test_Signal_WritePeriod
 219              	.LVL6:
 139:Generated_Source\PSoC5/PWM_Test_Signal.c ****         #else
 220              		.loc 1 139 0
 221 0030 0520     		movs	r0, #5
 222 0032 FFF7FEFF 		bl	PWM_Test_Signal_WriteCompare
 223              	.LVL7:
 224 0036 08BD     		pop	{r3, pc}
 225              	.L22:
 226              		.align	2
 227              	.L21:
 228 0038 75650040 		.word	1073767797
 229              		.cfi_endproc
 230              	.LFE1:
 231              		.size	PWM_Test_Signal_Init, .-PWM_Test_Signal_Init
 232              		.section	.text.PWM_Test_Signal_Start,"ax",%progbits
 233              		.align	2
 234              		.global	PWM_Test_Signal_Start
 235              		.thumb
 236              		.thumb_func
 237              		.type	PWM_Test_Signal_Start, %function
 238              	PWM_Test_Signal_Start:
 239              	.LFB0:
  56:Generated_Source\PSoC5/PWM_Test_Signal.c ****     /* If not Initialized then initialize all required hardware and software */
 240              		.loc 1 56 0
 241              		.cfi_startproc
 242              		@ args = 0, pretend = 0, frame = 0
 243              		@ frame_needed = 0, uses_anonymous_args = 0
 244 0000 08B5     		push	{r3, lr}
 245              		.cfi_def_cfa_offset 8
 246              		.cfi_offset 3, -8
 247              		.cfi_offset 14, -4
  58:Generated_Source\PSoC5/PWM_Test_Signal.c ****     {
 248              		.loc 1 58 0
 249 0002 054B     		ldr	r3, .L26
 250 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 251 0006 23B9     		cbnz	r3, .L24
  60:Generated_Source\PSoC5/PWM_Test_Signal.c ****         PWM_Test_Signal_initVar = 1u;
 252              		.loc 1 60 0
 253 0008 FFF7FEFF 		bl	PWM_Test_Signal_Init
 254              	.LVL8:
  61:Generated_Source\PSoC5/PWM_Test_Signal.c ****     }
 255              		.loc 1 61 0
 256 000c 0122     		movs	r2, #1
 257 000e 024B     		ldr	r3, .L26
 258 0010 1A70     		strb	r2, [r3]
 259              	.L24:
  63:Generated_Source\PSoC5/PWM_Test_Signal.c **** 
 260              		.loc 1 63 0
 261 0012 FFF7FEFF 		bl	PWM_Test_Signal_Enable
 262              	.LVL9:
 263 0016 08BD     		pop	{r3, pc}
ARM GAS  C:\Users\ANDREW~1\AppData\Local\Temp\ccVPyEiU.s 			page 15


 264              	.L27:
 265              		.align	2
 266              	.L26:
 267 0018 00000000 		.word	.LANCHOR0
 268              		.cfi_endproc
 269              	.LFE0:
 270              		.size	PWM_Test_Signal_Start, .-PWM_Test_Signal_Start
 271              		.section	.text.PWM_Test_Signal_ReadControlRegister,"ax",%progbits
 272              		.align	2
 273              		.global	PWM_Test_Signal_ReadControlRegister
 274              		.thumb
 275              		.thumb_func
 276              		.type	PWM_Test_Signal_ReadControlRegister, %function
 277              	PWM_Test_Signal_ReadControlRegister:
 278              	.LFB8:
 523:Generated_Source\PSoC5/PWM_Test_Signal.c ****         #endif /* (PWM_Test_Signal_UsingFixedFunction) */
 524:Generated_Source\PSoC5/PWM_Test_Signal.c **** 
 525:Generated_Source\PSoC5/PWM_Test_Signal.c ****         #if (PWM_Test_Signal_PWMMode == PWM_Test_Signal__B_PWM__DITHER)
 526:Generated_Source\PSoC5/PWM_Test_Signal.c ****             #if(PWM_Test_Signal_UsingFixedFunction)
 527:Generated_Source\PSoC5/PWM_Test_Signal.c ****                 CY_SET_REG16(PWM_Test_Signal_COMPARE2_LSB_PTR, (uint16)(compare + 1u));
 528:Generated_Source\PSoC5/PWM_Test_Signal.c ****             #else
 529:Generated_Source\PSoC5/PWM_Test_Signal.c ****                 CY_SET_REG16(PWM_Test_Signal_COMPARE2_LSB_PTR, (compare + 1u));
 530:Generated_Source\PSoC5/PWM_Test_Signal.c ****             #endif /* (PWM_Test_Signal_UsingFixedFunction) */
 531:Generated_Source\PSoC5/PWM_Test_Signal.c ****         #endif /* (PWM_Test_Signal_PWMMode == PWM_Test_Signal__B_PWM__DITHER) */
 532:Generated_Source\PSoC5/PWM_Test_Signal.c ****     }
 533:Generated_Source\PSoC5/PWM_Test_Signal.c **** 
 534:Generated_Source\PSoC5/PWM_Test_Signal.c **** 
 535:Generated_Source\PSoC5/PWM_Test_Signal.c **** #else
 536:Generated_Source\PSoC5/PWM_Test_Signal.c **** 
 537:Generated_Source\PSoC5/PWM_Test_Signal.c **** 
 538:Generated_Source\PSoC5/PWM_Test_Signal.c ****     /*******************************************************************************
 539:Generated_Source\PSoC5/PWM_Test_Signal.c ****     * Function Name: PWM_Test_Signal_WriteCompare1
 540:Generated_Source\PSoC5/PWM_Test_Signal.c ****     ********************************************************************************
 541:Generated_Source\PSoC5/PWM_Test_Signal.c ****     *
 542:Generated_Source\PSoC5/PWM_Test_Signal.c ****     * Summary:
 543:Generated_Source\PSoC5/PWM_Test_Signal.c ****     *  This funtion is used to change the compare1 value.  The compare output will
 544:Generated_Source\PSoC5/PWM_Test_Signal.c ****     *  reflect the new value on the next UDB clock.  The compare output will be
 545:Generated_Source\PSoC5/PWM_Test_Signal.c ****     *  driven high when the present counter value is less than or less than or
 546:Generated_Source\PSoC5/PWM_Test_Signal.c ****     *  equal to the compare register, depending on the mode.
 547:Generated_Source\PSoC5/PWM_Test_Signal.c ****     *
 548:Generated_Source\PSoC5/PWM_Test_Signal.c ****     * Parameters:
 549:Generated_Source\PSoC5/PWM_Test_Signal.c ****     *  compare:  New compare value.
 550:Generated_Source\PSoC5/PWM_Test_Signal.c ****     *
 551:Generated_Source\PSoC5/PWM_Test_Signal.c ****     * Return:
 552:Generated_Source\PSoC5/PWM_Test_Signal.c ****     *  None
 553:Generated_Source\PSoC5/PWM_Test_Signal.c ****     *
 554:Generated_Source\PSoC5/PWM_Test_Signal.c ****     *******************************************************************************/
 555:Generated_Source\PSoC5/PWM_Test_Signal.c ****     void PWM_Test_Signal_WriteCompare1(uint16 compare) \
 556:Generated_Source\PSoC5/PWM_Test_Signal.c ****                                         
 557:Generated_Source\PSoC5/PWM_Test_Signal.c ****     {
 558:Generated_Source\PSoC5/PWM_Test_Signal.c ****         #if(PWM_Test_Signal_UsingFixedFunction)
 559:Generated_Source\PSoC5/PWM_Test_Signal.c ****             CY_SET_REG16(PWM_Test_Signal_COMPARE1_LSB_PTR, (uint16)compare);
 560:Generated_Source\PSoC5/PWM_Test_Signal.c ****         #else
 561:Generated_Source\PSoC5/PWM_Test_Signal.c ****             CY_SET_REG16(PWM_Test_Signal_COMPARE1_LSB_PTR, compare);
 562:Generated_Source\PSoC5/PWM_Test_Signal.c ****         #endif /* (PWM_Test_Signal_UsingFixedFunction) */
 563:Generated_Source\PSoC5/PWM_Test_Signal.c ****     }
 564:Generated_Source\PSoC5/PWM_Test_Signal.c **** 
ARM GAS  C:\Users\ANDREW~1\AppData\Local\Temp\ccVPyEiU.s 			page 16


 565:Generated_Source\PSoC5/PWM_Test_Signal.c **** 
 566:Generated_Source\PSoC5/PWM_Test_Signal.c ****     /*******************************************************************************
 567:Generated_Source\PSoC5/PWM_Test_Signal.c ****     * Function Name: PWM_Test_Signal_WriteCompare2
 568:Generated_Source\PSoC5/PWM_Test_Signal.c ****     ********************************************************************************
 569:Generated_Source\PSoC5/PWM_Test_Signal.c ****     *
 570:Generated_Source\PSoC5/PWM_Test_Signal.c ****     * Summary:
 571:Generated_Source\PSoC5/PWM_Test_Signal.c ****     *  This funtion is used to change the compare value, for compare1 output.
 572:Generated_Source\PSoC5/PWM_Test_Signal.c ****     *  The compare output will reflect the new value on the next UDB clock.
 573:Generated_Source\PSoC5/PWM_Test_Signal.c ****     *  The compare output will be driven high when the present counter value is
 574:Generated_Source\PSoC5/PWM_Test_Signal.c ****     *  less than or less than or equal to the compare register, depending on the
 575:Generated_Source\PSoC5/PWM_Test_Signal.c ****     *  mode.
 576:Generated_Source\PSoC5/PWM_Test_Signal.c ****     *
 577:Generated_Source\PSoC5/PWM_Test_Signal.c ****     * Parameters:
 578:Generated_Source\PSoC5/PWM_Test_Signal.c ****     *  compare:  New compare value.
 579:Generated_Source\PSoC5/PWM_Test_Signal.c ****     *
 580:Generated_Source\PSoC5/PWM_Test_Signal.c ****     * Return:
 581:Generated_Source\PSoC5/PWM_Test_Signal.c ****     *  None
 582:Generated_Source\PSoC5/PWM_Test_Signal.c ****     *
 583:Generated_Source\PSoC5/PWM_Test_Signal.c ****     *******************************************************************************/
 584:Generated_Source\PSoC5/PWM_Test_Signal.c ****     void PWM_Test_Signal_WriteCompare2(uint16 compare) \
 585:Generated_Source\PSoC5/PWM_Test_Signal.c ****                                         
 586:Generated_Source\PSoC5/PWM_Test_Signal.c ****     {
 587:Generated_Source\PSoC5/PWM_Test_Signal.c ****         #if(PWM_Test_Signal_UsingFixedFunction)
 588:Generated_Source\PSoC5/PWM_Test_Signal.c ****             CY_SET_REG16(PWM_Test_Signal_COMPARE2_LSB_PTR, compare);
 589:Generated_Source\PSoC5/PWM_Test_Signal.c ****         #else
 590:Generated_Source\PSoC5/PWM_Test_Signal.c ****             CY_SET_REG16(PWM_Test_Signal_COMPARE2_LSB_PTR, compare);
 591:Generated_Source\PSoC5/PWM_Test_Signal.c ****         #endif /* (PWM_Test_Signal_UsingFixedFunction) */
 592:Generated_Source\PSoC5/PWM_Test_Signal.c ****     }
 593:Generated_Source\PSoC5/PWM_Test_Signal.c **** #endif /* UseOneCompareMode */
 594:Generated_Source\PSoC5/PWM_Test_Signal.c **** 
 595:Generated_Source\PSoC5/PWM_Test_Signal.c **** #if (PWM_Test_Signal_DeadBandUsed)
 596:Generated_Source\PSoC5/PWM_Test_Signal.c **** 
 597:Generated_Source\PSoC5/PWM_Test_Signal.c **** 
 598:Generated_Source\PSoC5/PWM_Test_Signal.c ****     /*******************************************************************************
 599:Generated_Source\PSoC5/PWM_Test_Signal.c ****     * Function Name: PWM_Test_Signal_WriteDeadTime
 600:Generated_Source\PSoC5/PWM_Test_Signal.c ****     ********************************************************************************
 601:Generated_Source\PSoC5/PWM_Test_Signal.c ****     *
 602:Generated_Source\PSoC5/PWM_Test_Signal.c ****     * Summary:
 603:Generated_Source\PSoC5/PWM_Test_Signal.c ****     *  This function writes the dead-band counts to the corresponding register
 604:Generated_Source\PSoC5/PWM_Test_Signal.c ****     *
 605:Generated_Source\PSoC5/PWM_Test_Signal.c ****     * Parameters:
 606:Generated_Source\PSoC5/PWM_Test_Signal.c ****     *  deadtime:  Number of counts for dead time
 607:Generated_Source\PSoC5/PWM_Test_Signal.c ****     *
 608:Generated_Source\PSoC5/PWM_Test_Signal.c ****     * Return:
 609:Generated_Source\PSoC5/PWM_Test_Signal.c ****     *  None
 610:Generated_Source\PSoC5/PWM_Test_Signal.c ****     *
 611:Generated_Source\PSoC5/PWM_Test_Signal.c ****     *******************************************************************************/
 612:Generated_Source\PSoC5/PWM_Test_Signal.c ****     void PWM_Test_Signal_WriteDeadTime(uint8 deadtime) 
 613:Generated_Source\PSoC5/PWM_Test_Signal.c ****     {
 614:Generated_Source\PSoC5/PWM_Test_Signal.c ****         /* If using the Dead Band 1-255 mode then just write the register */
 615:Generated_Source\PSoC5/PWM_Test_Signal.c ****         #if(!PWM_Test_Signal_DeadBand2_4)
 616:Generated_Source\PSoC5/PWM_Test_Signal.c ****             CY_SET_REG8(PWM_Test_Signal_DEADBAND_COUNT_PTR, deadtime);
 617:Generated_Source\PSoC5/PWM_Test_Signal.c ****         #else
 618:Generated_Source\PSoC5/PWM_Test_Signal.c ****             /* Otherwise the data has to be masked and offset */
 619:Generated_Source\PSoC5/PWM_Test_Signal.c ****             /* Clear existing data */
 620:Generated_Source\PSoC5/PWM_Test_Signal.c ****             PWM_Test_Signal_DEADBAND_COUNT &= ((uint8)(~PWM_Test_Signal_DEADBAND_COUNT_MASK));
 621:Generated_Source\PSoC5/PWM_Test_Signal.c **** 
ARM GAS  C:\Users\ANDREW~1\AppData\Local\Temp\ccVPyEiU.s 			page 17


 622:Generated_Source\PSoC5/PWM_Test_Signal.c ****             /* Set new dead time */
 623:Generated_Source\PSoC5/PWM_Test_Signal.c ****             #if(PWM_Test_Signal_DEADBAND_COUNT_SHIFT)
 624:Generated_Source\PSoC5/PWM_Test_Signal.c ****                 PWM_Test_Signal_DEADBAND_COUNT |= ((uint8)((uint8)deadtime << PWM_Test_Signal_DEADB
 625:Generated_Source\PSoC5/PWM_Test_Signal.c ****                                                     PWM_Test_Signal_DEADBAND_COUNT_MASK;
 626:Generated_Source\PSoC5/PWM_Test_Signal.c ****             #else
 627:Generated_Source\PSoC5/PWM_Test_Signal.c ****                 PWM_Test_Signal_DEADBAND_COUNT |= deadtime & PWM_Test_Signal_DEADBAND_COUNT_MASK;
 628:Generated_Source\PSoC5/PWM_Test_Signal.c ****             #endif /* (PWM_Test_Signal_DEADBAND_COUNT_SHIFT) */
 629:Generated_Source\PSoC5/PWM_Test_Signal.c **** 
 630:Generated_Source\PSoC5/PWM_Test_Signal.c ****         #endif /* (!PWM_Test_Signal_DeadBand2_4) */
 631:Generated_Source\PSoC5/PWM_Test_Signal.c ****     }
 632:Generated_Source\PSoC5/PWM_Test_Signal.c **** 
 633:Generated_Source\PSoC5/PWM_Test_Signal.c **** 
 634:Generated_Source\PSoC5/PWM_Test_Signal.c ****     /*******************************************************************************
 635:Generated_Source\PSoC5/PWM_Test_Signal.c ****     * Function Name: PWM_Test_Signal_ReadDeadTime
 636:Generated_Source\PSoC5/PWM_Test_Signal.c ****     ********************************************************************************
 637:Generated_Source\PSoC5/PWM_Test_Signal.c ****     *
 638:Generated_Source\PSoC5/PWM_Test_Signal.c ****     * Summary:
 639:Generated_Source\PSoC5/PWM_Test_Signal.c ****     *  This function reads the dead-band counts from the corresponding register
 640:Generated_Source\PSoC5/PWM_Test_Signal.c ****     *
 641:Generated_Source\PSoC5/PWM_Test_Signal.c ****     * Parameters:
 642:Generated_Source\PSoC5/PWM_Test_Signal.c ****     *  None
 643:Generated_Source\PSoC5/PWM_Test_Signal.c ****     *
 644:Generated_Source\PSoC5/PWM_Test_Signal.c ****     * Return:
 645:Generated_Source\PSoC5/PWM_Test_Signal.c ****     *  Dead Band Counts
 646:Generated_Source\PSoC5/PWM_Test_Signal.c ****     *
 647:Generated_Source\PSoC5/PWM_Test_Signal.c ****     *******************************************************************************/
 648:Generated_Source\PSoC5/PWM_Test_Signal.c ****     uint8 PWM_Test_Signal_ReadDeadTime(void) 
 649:Generated_Source\PSoC5/PWM_Test_Signal.c ****     {
 650:Generated_Source\PSoC5/PWM_Test_Signal.c ****         /* If using the Dead Band 1-255 mode then just read the register */
 651:Generated_Source\PSoC5/PWM_Test_Signal.c ****         #if(!PWM_Test_Signal_DeadBand2_4)
 652:Generated_Source\PSoC5/PWM_Test_Signal.c ****             return (CY_GET_REG8(PWM_Test_Signal_DEADBAND_COUNT_PTR));
 653:Generated_Source\PSoC5/PWM_Test_Signal.c ****         #else
 654:Generated_Source\PSoC5/PWM_Test_Signal.c **** 
 655:Generated_Source\PSoC5/PWM_Test_Signal.c ****             /* Otherwise the data has to be masked and offset */
 656:Generated_Source\PSoC5/PWM_Test_Signal.c ****             #if(PWM_Test_Signal_DEADBAND_COUNT_SHIFT)
 657:Generated_Source\PSoC5/PWM_Test_Signal.c ****                 return ((uint8)(((uint8)(PWM_Test_Signal_DEADBAND_COUNT & PWM_Test_Signal_DEADBAND_
 658:Generated_Source\PSoC5/PWM_Test_Signal.c ****                                                                            PWM_Test_Signal_DEADBAND
 659:Generated_Source\PSoC5/PWM_Test_Signal.c ****             #else
 660:Generated_Source\PSoC5/PWM_Test_Signal.c ****                 return (PWM_Test_Signal_DEADBAND_COUNT & PWM_Test_Signal_DEADBAND_COUNT_MASK);
 661:Generated_Source\PSoC5/PWM_Test_Signal.c ****             #endif /* (PWM_Test_Signal_DEADBAND_COUNT_SHIFT) */
 662:Generated_Source\PSoC5/PWM_Test_Signal.c ****         #endif /* (!PWM_Test_Signal_DeadBand2_4) */
 663:Generated_Source\PSoC5/PWM_Test_Signal.c ****     }
 664:Generated_Source\PSoC5/PWM_Test_Signal.c **** #endif /* DeadBandUsed */
 665:Generated_Source\PSoC5/PWM_Test_Signal.c **** 
 666:Generated_Source\PSoC5/PWM_Test_Signal.c **** #if (PWM_Test_Signal_UseStatus || PWM_Test_Signal_UsingFixedFunction)
 667:Generated_Source\PSoC5/PWM_Test_Signal.c **** 
 668:Generated_Source\PSoC5/PWM_Test_Signal.c **** 
 669:Generated_Source\PSoC5/PWM_Test_Signal.c ****     /*******************************************************************************
 670:Generated_Source\PSoC5/PWM_Test_Signal.c ****     * Function Name: PWM_Test_Signal_SetInterruptMode
 671:Generated_Source\PSoC5/PWM_Test_Signal.c ****     ********************************************************************************
 672:Generated_Source\PSoC5/PWM_Test_Signal.c ****     *
 673:Generated_Source\PSoC5/PWM_Test_Signal.c ****     * Summary:
 674:Generated_Source\PSoC5/PWM_Test_Signal.c ****     *  This function configures the interrupts mask control of theinterrupt
 675:Generated_Source\PSoC5/PWM_Test_Signal.c ****     *  source status register.
 676:Generated_Source\PSoC5/PWM_Test_Signal.c ****     *
 677:Generated_Source\PSoC5/PWM_Test_Signal.c ****     * Parameters:
 678:Generated_Source\PSoC5/PWM_Test_Signal.c ****     *  uint8 interruptMode: Bit field containing the interrupt sources enabled
ARM GAS  C:\Users\ANDREW~1\AppData\Local\Temp\ccVPyEiU.s 			page 18


 679:Generated_Source\PSoC5/PWM_Test_Signal.c ****     *
 680:Generated_Source\PSoC5/PWM_Test_Signal.c ****     * Return:
 681:Generated_Source\PSoC5/PWM_Test_Signal.c ****     *  None
 682:Generated_Source\PSoC5/PWM_Test_Signal.c ****     *
 683:Generated_Source\PSoC5/PWM_Test_Signal.c ****     *******************************************************************************/
 684:Generated_Source\PSoC5/PWM_Test_Signal.c ****     void PWM_Test_Signal_SetInterruptMode(uint8 interruptMode) 
 685:Generated_Source\PSoC5/PWM_Test_Signal.c ****     {
 686:Generated_Source\PSoC5/PWM_Test_Signal.c ****         CY_SET_REG8(PWM_Test_Signal_STATUS_MASK_PTR, interruptMode);
 687:Generated_Source\PSoC5/PWM_Test_Signal.c ****     }
 688:Generated_Source\PSoC5/PWM_Test_Signal.c **** 
 689:Generated_Source\PSoC5/PWM_Test_Signal.c **** 
 690:Generated_Source\PSoC5/PWM_Test_Signal.c ****     /*******************************************************************************
 691:Generated_Source\PSoC5/PWM_Test_Signal.c ****     * Function Name: PWM_Test_Signal_ReadStatusRegister
 692:Generated_Source\PSoC5/PWM_Test_Signal.c ****     ********************************************************************************
 693:Generated_Source\PSoC5/PWM_Test_Signal.c ****     *
 694:Generated_Source\PSoC5/PWM_Test_Signal.c ****     * Summary:
 695:Generated_Source\PSoC5/PWM_Test_Signal.c ****     *  This function returns the current state of the status register.
 696:Generated_Source\PSoC5/PWM_Test_Signal.c ****     *
 697:Generated_Source\PSoC5/PWM_Test_Signal.c ****     * Parameters:
 698:Generated_Source\PSoC5/PWM_Test_Signal.c ****     *  None
 699:Generated_Source\PSoC5/PWM_Test_Signal.c ****     *
 700:Generated_Source\PSoC5/PWM_Test_Signal.c ****     * Return:
 701:Generated_Source\PSoC5/PWM_Test_Signal.c ****     *  uint8 : Current status register value. The status register bits are:
 702:Generated_Source\PSoC5/PWM_Test_Signal.c ****     *  [7:6] : Unused(0)
 703:Generated_Source\PSoC5/PWM_Test_Signal.c ****     *  [5]   : Kill event output
 704:Generated_Source\PSoC5/PWM_Test_Signal.c ****     *  [4]   : FIFO not empty
 705:Generated_Source\PSoC5/PWM_Test_Signal.c ****     *  [3]   : FIFO full
 706:Generated_Source\PSoC5/PWM_Test_Signal.c ****     *  [2]   : Terminal count
 707:Generated_Source\PSoC5/PWM_Test_Signal.c ****     *  [1]   : Compare output 2
 708:Generated_Source\PSoC5/PWM_Test_Signal.c ****     *  [0]   : Compare output 1
 709:Generated_Source\PSoC5/PWM_Test_Signal.c ****     *
 710:Generated_Source\PSoC5/PWM_Test_Signal.c ****     *******************************************************************************/
 711:Generated_Source\PSoC5/PWM_Test_Signal.c ****     uint8 PWM_Test_Signal_ReadStatusRegister(void) 
 712:Generated_Source\PSoC5/PWM_Test_Signal.c ****     {
 713:Generated_Source\PSoC5/PWM_Test_Signal.c ****         return (CY_GET_REG8(PWM_Test_Signal_STATUS_PTR));
 714:Generated_Source\PSoC5/PWM_Test_Signal.c ****     }
 715:Generated_Source\PSoC5/PWM_Test_Signal.c **** 
 716:Generated_Source\PSoC5/PWM_Test_Signal.c **** #endif /* (PWM_Test_Signal_UseStatus || PWM_Test_Signal_UsingFixedFunction) */
 717:Generated_Source\PSoC5/PWM_Test_Signal.c **** 
 718:Generated_Source\PSoC5/PWM_Test_Signal.c **** 
 719:Generated_Source\PSoC5/PWM_Test_Signal.c **** #if (PWM_Test_Signal_UseControl)
 720:Generated_Source\PSoC5/PWM_Test_Signal.c **** 
 721:Generated_Source\PSoC5/PWM_Test_Signal.c **** 
 722:Generated_Source\PSoC5/PWM_Test_Signal.c ****     /*******************************************************************************
 723:Generated_Source\PSoC5/PWM_Test_Signal.c ****     * Function Name: PWM_Test_Signal_ReadControlRegister
 724:Generated_Source\PSoC5/PWM_Test_Signal.c ****     ********************************************************************************
 725:Generated_Source\PSoC5/PWM_Test_Signal.c ****     *
 726:Generated_Source\PSoC5/PWM_Test_Signal.c ****     * Summary:
 727:Generated_Source\PSoC5/PWM_Test_Signal.c ****     *  Returns the current state of the control register. This API is available
 728:Generated_Source\PSoC5/PWM_Test_Signal.c ****     *  only if the control register is not removed.
 729:Generated_Source\PSoC5/PWM_Test_Signal.c ****     *
 730:Generated_Source\PSoC5/PWM_Test_Signal.c ****     * Parameters:
 731:Generated_Source\PSoC5/PWM_Test_Signal.c ****     *  None
 732:Generated_Source\PSoC5/PWM_Test_Signal.c ****     *
 733:Generated_Source\PSoC5/PWM_Test_Signal.c ****     * Return:
 734:Generated_Source\PSoC5/PWM_Test_Signal.c ****     *  uint8 : Current control register value
 735:Generated_Source\PSoC5/PWM_Test_Signal.c ****     *
ARM GAS  C:\Users\ANDREW~1\AppData\Local\Temp\ccVPyEiU.s 			page 19


 736:Generated_Source\PSoC5/PWM_Test_Signal.c ****     *******************************************************************************/
 737:Generated_Source\PSoC5/PWM_Test_Signal.c ****     uint8 PWM_Test_Signal_ReadControlRegister(void) 
 738:Generated_Source\PSoC5/PWM_Test_Signal.c ****     {
 279              		.loc 1 738 0
 280              		.cfi_startproc
 281              		@ args = 0, pretend = 0, frame = 0
 282              		@ frame_needed = 0, uses_anonymous_args = 0
 283              		@ link register save eliminated.
 739:Generated_Source\PSoC5/PWM_Test_Signal.c ****         uint8 result;
 740:Generated_Source\PSoC5/PWM_Test_Signal.c **** 
 741:Generated_Source\PSoC5/PWM_Test_Signal.c ****         result = CY_GET_REG8(PWM_Test_Signal_CONTROL_PTR);
 284              		.loc 1 741 0
 285 0000 014B     		ldr	r3, .L29
 286 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 287              	.LVL10:
 742:Generated_Source\PSoC5/PWM_Test_Signal.c ****         return (result);
 743:Generated_Source\PSoC5/PWM_Test_Signal.c ****     }
 288              		.loc 1 743 0
 289 0004 7047     		bx	lr
 290              	.L30:
 291 0006 00BF     		.align	2
 292              	.L29:
 293 0008 75650040 		.word	1073767797
 294              		.cfi_endproc
 295              	.LFE8:
 296              		.size	PWM_Test_Signal_ReadControlRegister, .-PWM_Test_Signal_ReadControlRegister
 297              		.section	.text.PWM_Test_Signal_WriteControlRegister,"ax",%progbits
 298              		.align	2
 299              		.global	PWM_Test_Signal_WriteControlRegister
 300              		.thumb
 301              		.thumb_func
 302              		.type	PWM_Test_Signal_WriteControlRegister, %function
 303              	PWM_Test_Signal_WriteControlRegister:
 304              	.LFB9:
 744:Generated_Source\PSoC5/PWM_Test_Signal.c **** 
 745:Generated_Source\PSoC5/PWM_Test_Signal.c **** 
 746:Generated_Source\PSoC5/PWM_Test_Signal.c ****     /*******************************************************************************
 747:Generated_Source\PSoC5/PWM_Test_Signal.c ****     * Function Name: PWM_Test_Signal_WriteControlRegister
 748:Generated_Source\PSoC5/PWM_Test_Signal.c ****     ********************************************************************************
 749:Generated_Source\PSoC5/PWM_Test_Signal.c ****     *
 750:Generated_Source\PSoC5/PWM_Test_Signal.c ****     * Summary:
 751:Generated_Source\PSoC5/PWM_Test_Signal.c ****     *  Sets the bit field of the control register. This API is available only if
 752:Generated_Source\PSoC5/PWM_Test_Signal.c ****     *  the control register is not removed.
 753:Generated_Source\PSoC5/PWM_Test_Signal.c ****     *
 754:Generated_Source\PSoC5/PWM_Test_Signal.c ****     * Parameters:
 755:Generated_Source\PSoC5/PWM_Test_Signal.c ****     *  uint8 control: Control register bit field, The status register bits are:
 756:Generated_Source\PSoC5/PWM_Test_Signal.c ****     *  [7]   : PWM Enable
 757:Generated_Source\PSoC5/PWM_Test_Signal.c ****     *  [6]   : Reset
 758:Generated_Source\PSoC5/PWM_Test_Signal.c ****     *  [5:3] : Compare Mode2
 759:Generated_Source\PSoC5/PWM_Test_Signal.c ****     *  [2:0] : Compare Mode2
 760:Generated_Source\PSoC5/PWM_Test_Signal.c ****     *
 761:Generated_Source\PSoC5/PWM_Test_Signal.c ****     * Return:
 762:Generated_Source\PSoC5/PWM_Test_Signal.c ****     *  None
 763:Generated_Source\PSoC5/PWM_Test_Signal.c ****     *
 764:Generated_Source\PSoC5/PWM_Test_Signal.c ****     *******************************************************************************/
 765:Generated_Source\PSoC5/PWM_Test_Signal.c ****     void PWM_Test_Signal_WriteControlRegister(uint8 control) 
 766:Generated_Source\PSoC5/PWM_Test_Signal.c ****     {
ARM GAS  C:\Users\ANDREW~1\AppData\Local\Temp\ccVPyEiU.s 			page 20


 305              		.loc 1 766 0
 306              		.cfi_startproc
 307              		@ args = 0, pretend = 0, frame = 0
 308              		@ frame_needed = 0, uses_anonymous_args = 0
 309              		@ link register save eliminated.
 310              	.LVL11:
 767:Generated_Source\PSoC5/PWM_Test_Signal.c ****         CY_SET_REG8(PWM_Test_Signal_CONTROL_PTR, control);
 311              		.loc 1 767 0
 312 0000 014B     		ldr	r3, .L32
 313 0002 1870     		strb	r0, [r3]
 314 0004 7047     		bx	lr
 315              	.L33:
 316 0006 00BF     		.align	2
 317              	.L32:
 318 0008 75650040 		.word	1073767797
 319              		.cfi_endproc
 320              	.LFE9:
 321              		.size	PWM_Test_Signal_WriteControlRegister, .-PWM_Test_Signal_WriteControlRegister
 322              		.section	.text.PWM_Test_Signal_ReadCapture,"ax",%progbits
 323              		.align	2
 324              		.global	PWM_Test_Signal_ReadCapture
 325              		.thumb
 326              		.thumb_func
 327              		.type	PWM_Test_Signal_ReadCapture, %function
 328              	PWM_Test_Signal_ReadCapture:
 329              	.LFB10:
 768:Generated_Source\PSoC5/PWM_Test_Signal.c ****     }
 769:Generated_Source\PSoC5/PWM_Test_Signal.c **** 
 770:Generated_Source\PSoC5/PWM_Test_Signal.c **** #endif /* (PWM_Test_Signal_UseControl) */
 771:Generated_Source\PSoC5/PWM_Test_Signal.c **** 
 772:Generated_Source\PSoC5/PWM_Test_Signal.c **** 
 773:Generated_Source\PSoC5/PWM_Test_Signal.c **** #if (!PWM_Test_Signal_UsingFixedFunction)
 774:Generated_Source\PSoC5/PWM_Test_Signal.c **** 
 775:Generated_Source\PSoC5/PWM_Test_Signal.c **** 
 776:Generated_Source\PSoC5/PWM_Test_Signal.c ****     /*******************************************************************************
 777:Generated_Source\PSoC5/PWM_Test_Signal.c ****     * Function Name: PWM_Test_Signal_ReadCapture
 778:Generated_Source\PSoC5/PWM_Test_Signal.c ****     ********************************************************************************
 779:Generated_Source\PSoC5/PWM_Test_Signal.c ****     *
 780:Generated_Source\PSoC5/PWM_Test_Signal.c ****     * Summary:
 781:Generated_Source\PSoC5/PWM_Test_Signal.c ****     *  Reads the capture value from the capture FIFO.
 782:Generated_Source\PSoC5/PWM_Test_Signal.c ****     *
 783:Generated_Source\PSoC5/PWM_Test_Signal.c ****     * Parameters:
 784:Generated_Source\PSoC5/PWM_Test_Signal.c ****     *  None
 785:Generated_Source\PSoC5/PWM_Test_Signal.c ****     *
 786:Generated_Source\PSoC5/PWM_Test_Signal.c ****     * Return:
 787:Generated_Source\PSoC5/PWM_Test_Signal.c ****     *  uint8/uint16: The current capture value
 788:Generated_Source\PSoC5/PWM_Test_Signal.c ****     *
 789:Generated_Source\PSoC5/PWM_Test_Signal.c ****     *******************************************************************************/
 790:Generated_Source\PSoC5/PWM_Test_Signal.c ****     uint16 PWM_Test_Signal_ReadCapture(void) 
 791:Generated_Source\PSoC5/PWM_Test_Signal.c ****     {
 330              		.loc 1 791 0
 331              		.cfi_startproc
 332              		@ args = 0, pretend = 0, frame = 0
 333              		@ frame_needed = 0, uses_anonymous_args = 0
 334              		@ link register save eliminated.
 792:Generated_Source\PSoC5/PWM_Test_Signal.c ****         return (CY_GET_REG16(PWM_Test_Signal_CAPTURE_LSB_PTR));
 335              		.loc 1 792 0
ARM GAS  C:\Users\ANDREW~1\AppData\Local\Temp\ccVPyEiU.s 			page 21


 336 0000 014B     		ldr	r3, .L35
 337 0002 1888     		ldrh	r0, [r3]
 793:Generated_Source\PSoC5/PWM_Test_Signal.c ****     }
 338              		.loc 1 793 0
 339 0004 80B2     		uxth	r0, r0
 340 0006 7047     		bx	lr
 341              	.L36:
 342              		.align	2
 343              	.L35:
 344 0008 A86A0040 		.word	1073769128
 345              		.cfi_endproc
 346              	.LFE10:
 347              		.size	PWM_Test_Signal_ReadCapture, .-PWM_Test_Signal_ReadCapture
 348              		.section	.text.PWM_Test_Signal_ReadCompare,"ax",%progbits
 349              		.align	2
 350              		.global	PWM_Test_Signal_ReadCompare
 351              		.thumb
 352              		.thumb_func
 353              		.type	PWM_Test_Signal_ReadCompare, %function
 354              	PWM_Test_Signal_ReadCompare:
 355              	.LFB11:
 794:Generated_Source\PSoC5/PWM_Test_Signal.c **** 
 795:Generated_Source\PSoC5/PWM_Test_Signal.c **** #endif /* (!PWM_Test_Signal_UsingFixedFunction) */
 796:Generated_Source\PSoC5/PWM_Test_Signal.c **** 
 797:Generated_Source\PSoC5/PWM_Test_Signal.c **** 
 798:Generated_Source\PSoC5/PWM_Test_Signal.c **** #if (PWM_Test_Signal_UseOneCompareMode)
 799:Generated_Source\PSoC5/PWM_Test_Signal.c **** 
 800:Generated_Source\PSoC5/PWM_Test_Signal.c **** 
 801:Generated_Source\PSoC5/PWM_Test_Signal.c ****     /*******************************************************************************
 802:Generated_Source\PSoC5/PWM_Test_Signal.c ****     * Function Name: PWM_Test_Signal_ReadCompare
 803:Generated_Source\PSoC5/PWM_Test_Signal.c ****     ********************************************************************************
 804:Generated_Source\PSoC5/PWM_Test_Signal.c ****     *
 805:Generated_Source\PSoC5/PWM_Test_Signal.c ****     * Summary:
 806:Generated_Source\PSoC5/PWM_Test_Signal.c ****     *  Reads the compare value for the compare output when the PWM Mode parameter is
 807:Generated_Source\PSoC5/PWM_Test_Signal.c ****     *  set to Dither mode, Center Aligned mode, or One Output mode.
 808:Generated_Source\PSoC5/PWM_Test_Signal.c ****     *
 809:Generated_Source\PSoC5/PWM_Test_Signal.c ****     * Parameters:
 810:Generated_Source\PSoC5/PWM_Test_Signal.c ****     *  None
 811:Generated_Source\PSoC5/PWM_Test_Signal.c ****     *
 812:Generated_Source\PSoC5/PWM_Test_Signal.c ****     * Return:
 813:Generated_Source\PSoC5/PWM_Test_Signal.c ****     *  uint8/uint16: Current compare value
 814:Generated_Source\PSoC5/PWM_Test_Signal.c ****     *
 815:Generated_Source\PSoC5/PWM_Test_Signal.c ****     *******************************************************************************/
 816:Generated_Source\PSoC5/PWM_Test_Signal.c ****     uint16 PWM_Test_Signal_ReadCompare(void) 
 817:Generated_Source\PSoC5/PWM_Test_Signal.c ****     {
 356              		.loc 1 817 0
 357              		.cfi_startproc
 358              		@ args = 0, pretend = 0, frame = 0
 359              		@ frame_needed = 0, uses_anonymous_args = 0
 360              		@ link register save eliminated.
 818:Generated_Source\PSoC5/PWM_Test_Signal.c ****         #if(PWM_Test_Signal_UsingFixedFunction)
 819:Generated_Source\PSoC5/PWM_Test_Signal.c ****             return ((uint16)CY_GET_REG16(PWM_Test_Signal_COMPARE1_LSB_PTR));
 820:Generated_Source\PSoC5/PWM_Test_Signal.c ****         #else
 821:Generated_Source\PSoC5/PWM_Test_Signal.c ****             return (CY_GET_REG16(PWM_Test_Signal_COMPARE1_LSB_PTR));
 361              		.loc 1 821 0
 362 0000 014B     		ldr	r3, .L38
 363 0002 1888     		ldrh	r0, [r3]
ARM GAS  C:\Users\ANDREW~1\AppData\Local\Temp\ccVPyEiU.s 			page 22


 822:Generated_Source\PSoC5/PWM_Test_Signal.c ****         #endif /* (PWM_Test_Signal_UsingFixedFunction) */
 823:Generated_Source\PSoC5/PWM_Test_Signal.c ****     }
 364              		.loc 1 823 0
 365 0004 80B2     		uxth	r0, r0
 366 0006 7047     		bx	lr
 367              	.L39:
 368              		.align	2
 369              	.L38:
 370 0008 486A0040 		.word	1073769032
 371              		.cfi_endproc
 372              	.LFE11:
 373              		.size	PWM_Test_Signal_ReadCompare, .-PWM_Test_Signal_ReadCompare
 374              		.section	.text.PWM_Test_Signal_ReadPeriod,"ax",%progbits
 375              		.align	2
 376              		.global	PWM_Test_Signal_ReadPeriod
 377              		.thumb
 378              		.thumb_func
 379              		.type	PWM_Test_Signal_ReadPeriod, %function
 380              	PWM_Test_Signal_ReadPeriod:
 381              	.LFB12:
 824:Generated_Source\PSoC5/PWM_Test_Signal.c **** 
 825:Generated_Source\PSoC5/PWM_Test_Signal.c **** #else
 826:Generated_Source\PSoC5/PWM_Test_Signal.c **** 
 827:Generated_Source\PSoC5/PWM_Test_Signal.c **** 
 828:Generated_Source\PSoC5/PWM_Test_Signal.c ****     /*******************************************************************************
 829:Generated_Source\PSoC5/PWM_Test_Signal.c ****     * Function Name: PWM_Test_Signal_ReadCompare1
 830:Generated_Source\PSoC5/PWM_Test_Signal.c ****     ********************************************************************************
 831:Generated_Source\PSoC5/PWM_Test_Signal.c ****     *
 832:Generated_Source\PSoC5/PWM_Test_Signal.c ****     * Summary:
 833:Generated_Source\PSoC5/PWM_Test_Signal.c ****     *  Reads the compare value for the compare1 output.
 834:Generated_Source\PSoC5/PWM_Test_Signal.c ****     *
 835:Generated_Source\PSoC5/PWM_Test_Signal.c ****     * Parameters:
 836:Generated_Source\PSoC5/PWM_Test_Signal.c ****     *  None
 837:Generated_Source\PSoC5/PWM_Test_Signal.c ****     *
 838:Generated_Source\PSoC5/PWM_Test_Signal.c ****     * Return:
 839:Generated_Source\PSoC5/PWM_Test_Signal.c ****     *  uint8/uint16: Current compare value.
 840:Generated_Source\PSoC5/PWM_Test_Signal.c ****     *
 841:Generated_Source\PSoC5/PWM_Test_Signal.c ****     *******************************************************************************/
 842:Generated_Source\PSoC5/PWM_Test_Signal.c ****     uint16 PWM_Test_Signal_ReadCompare1(void) 
 843:Generated_Source\PSoC5/PWM_Test_Signal.c ****     {
 844:Generated_Source\PSoC5/PWM_Test_Signal.c ****         return (CY_GET_REG16(PWM_Test_Signal_COMPARE1_LSB_PTR));
 845:Generated_Source\PSoC5/PWM_Test_Signal.c ****     }
 846:Generated_Source\PSoC5/PWM_Test_Signal.c **** 
 847:Generated_Source\PSoC5/PWM_Test_Signal.c **** 
 848:Generated_Source\PSoC5/PWM_Test_Signal.c ****     /*******************************************************************************
 849:Generated_Source\PSoC5/PWM_Test_Signal.c ****     * Function Name: PWM_Test_Signal_ReadCompare2
 850:Generated_Source\PSoC5/PWM_Test_Signal.c ****     ********************************************************************************
 851:Generated_Source\PSoC5/PWM_Test_Signal.c ****     *
 852:Generated_Source\PSoC5/PWM_Test_Signal.c ****     * Summary:
 853:Generated_Source\PSoC5/PWM_Test_Signal.c ****     *  Reads the compare value for the compare2 output.
 854:Generated_Source\PSoC5/PWM_Test_Signal.c ****     *
 855:Generated_Source\PSoC5/PWM_Test_Signal.c ****     * Parameters:
 856:Generated_Source\PSoC5/PWM_Test_Signal.c ****     *  None
 857:Generated_Source\PSoC5/PWM_Test_Signal.c ****     *
 858:Generated_Source\PSoC5/PWM_Test_Signal.c ****     * Return:
 859:Generated_Source\PSoC5/PWM_Test_Signal.c ****     *  uint8/uint16: Current compare value.
 860:Generated_Source\PSoC5/PWM_Test_Signal.c ****     *
ARM GAS  C:\Users\ANDREW~1\AppData\Local\Temp\ccVPyEiU.s 			page 23


 861:Generated_Source\PSoC5/PWM_Test_Signal.c ****     *******************************************************************************/
 862:Generated_Source\PSoC5/PWM_Test_Signal.c ****     uint16 PWM_Test_Signal_ReadCompare2(void) 
 863:Generated_Source\PSoC5/PWM_Test_Signal.c ****     {
 864:Generated_Source\PSoC5/PWM_Test_Signal.c ****         return (CY_GET_REG16(PWM_Test_Signal_COMPARE2_LSB_PTR));
 865:Generated_Source\PSoC5/PWM_Test_Signal.c ****     }
 866:Generated_Source\PSoC5/PWM_Test_Signal.c **** 
 867:Generated_Source\PSoC5/PWM_Test_Signal.c **** #endif /* (PWM_Test_Signal_UseOneCompareMode) */
 868:Generated_Source\PSoC5/PWM_Test_Signal.c **** 
 869:Generated_Source\PSoC5/PWM_Test_Signal.c **** 
 870:Generated_Source\PSoC5/PWM_Test_Signal.c **** /*******************************************************************************
 871:Generated_Source\PSoC5/PWM_Test_Signal.c **** * Function Name: PWM_Test_Signal_ReadPeriod
 872:Generated_Source\PSoC5/PWM_Test_Signal.c **** ********************************************************************************
 873:Generated_Source\PSoC5/PWM_Test_Signal.c **** *
 874:Generated_Source\PSoC5/PWM_Test_Signal.c **** * Summary:
 875:Generated_Source\PSoC5/PWM_Test_Signal.c **** *  Reads the period value used by the PWM hardware.
 876:Generated_Source\PSoC5/PWM_Test_Signal.c **** *
 877:Generated_Source\PSoC5/PWM_Test_Signal.c **** * Parameters:
 878:Generated_Source\PSoC5/PWM_Test_Signal.c **** *  None
 879:Generated_Source\PSoC5/PWM_Test_Signal.c **** *
 880:Generated_Source\PSoC5/PWM_Test_Signal.c **** * Return:
 881:Generated_Source\PSoC5/PWM_Test_Signal.c **** *  uint8/16: Period value
 882:Generated_Source\PSoC5/PWM_Test_Signal.c **** *
 883:Generated_Source\PSoC5/PWM_Test_Signal.c **** *******************************************************************************/
 884:Generated_Source\PSoC5/PWM_Test_Signal.c **** uint16 PWM_Test_Signal_ReadPeriod(void) 
 885:Generated_Source\PSoC5/PWM_Test_Signal.c **** {
 382              		.loc 1 885 0
 383              		.cfi_startproc
 384              		@ args = 0, pretend = 0, frame = 0
 385              		@ frame_needed = 0, uses_anonymous_args = 0
 386              		@ link register save eliminated.
 886:Generated_Source\PSoC5/PWM_Test_Signal.c ****     #if(PWM_Test_Signal_UsingFixedFunction)
 887:Generated_Source\PSoC5/PWM_Test_Signal.c ****         return ((uint16)CY_GET_REG16(PWM_Test_Signal_PERIOD_LSB_PTR));
 888:Generated_Source\PSoC5/PWM_Test_Signal.c ****     #else
 889:Generated_Source\PSoC5/PWM_Test_Signal.c ****         return (CY_GET_REG16(PWM_Test_Signal_PERIOD_LSB_PTR));
 387              		.loc 1 889 0
 388 0000 014B     		ldr	r3, .L41
 389 0002 1888     		ldrh	r0, [r3]
 890:Generated_Source\PSoC5/PWM_Test_Signal.c ****     #endif /* (PWM_Test_Signal_UsingFixedFunction) */
 891:Generated_Source\PSoC5/PWM_Test_Signal.c **** }
 390              		.loc 1 891 0
 391 0004 80B2     		uxth	r0, r0
 392 0006 7047     		bx	lr
 393              	.L42:
 394              		.align	2
 395              	.L41:
 396 0008 886A0040 		.word	1073769096
 397              		.cfi_endproc
 398              	.LFE12:
 399              		.size	PWM_Test_Signal_ReadPeriod, .-PWM_Test_Signal_ReadPeriod
 400              		.global	PWM_Test_Signal_initVar
 401              		.bss
 402              		.set	.LANCHOR0,. + 0
 403              		.type	PWM_Test_Signal_initVar, %object
 404              		.size	PWM_Test_Signal_initVar, 1
 405              	PWM_Test_Signal_initVar:
 406 0000 00       		.space	1
 407              		.text
ARM GAS  C:\Users\ANDREW~1\AppData\Local\Temp\ccVPyEiU.s 			page 24


 408              	.Letext0:
 409              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 410              		.section	.debug_info,"",%progbits
 411              	.Ldebug_info0:
 412 0000 8F020000 		.4byte	0x28f
 413 0004 0400     		.2byte	0x4
 414 0006 00000000 		.4byte	.Ldebug_abbrev0
 415 000a 04       		.byte	0x4
 416 000b 01       		.uleb128 0x1
 417 000c CD000000 		.4byte	.LASF36
 418 0010 0C       		.byte	0xc
 419 0011 5B010000 		.4byte	.LASF37
 420 0015 24000000 		.4byte	.LASF38
 421 0019 00000000 		.4byte	.Ldebug_ranges0+0
 422 001d 00000000 		.4byte	0
 423 0021 00000000 		.4byte	.Ldebug_line0
 424 0025 02       		.uleb128 0x2
 425 0026 01       		.byte	0x1
 426 0027 06       		.byte	0x6
 427 0028 25030000 		.4byte	.LASF0
 428 002c 02       		.uleb128 0x2
 429 002d 01       		.byte	0x1
 430 002e 08       		.byte	0x8
 431 002f BF000000 		.4byte	.LASF1
 432 0033 02       		.uleb128 0x2
 433 0034 02       		.byte	0x2
 434 0035 05       		.byte	0x5
 435 0036 EB020000 		.4byte	.LASF2
 436 003a 02       		.uleb128 0x2
 437 003b 02       		.byte	0x2
 438 003c 07       		.byte	0x7
 439 003d 82000000 		.4byte	.LASF3
 440 0041 02       		.uleb128 0x2
 441 0042 04       		.byte	0x4
 442 0043 05       		.byte	0x5
 443 0044 10030000 		.4byte	.LASF4
 444 0048 02       		.uleb128 0x2
 445 0049 04       		.byte	0x4
 446 004a 07       		.byte	0x7
 447 004b A6010000 		.4byte	.LASF5
 448 004f 02       		.uleb128 0x2
 449 0050 08       		.byte	0x8
 450 0051 05       		.byte	0x5
 451 0052 C3020000 		.4byte	.LASF6
 452 0056 02       		.uleb128 0x2
 453 0057 08       		.byte	0x8
 454 0058 07       		.byte	0x7
 455 0059 4E020000 		.4byte	.LASF7
 456 005d 03       		.uleb128 0x3
 457 005e 04       		.byte	0x4
 458 005f 05       		.byte	0x5
 459 0060 696E7400 		.ascii	"int\000"
 460 0064 02       		.uleb128 0x2
 461 0065 04       		.byte	0x4
 462 0066 07       		.byte	0x7
 463 0067 41020000 		.4byte	.LASF8
 464 006b 04       		.uleb128 0x4
ARM GAS  C:\Users\ANDREW~1\AppData\Local\Temp\ccVPyEiU.s 			page 25


 465 006c B8010000 		.4byte	.LASF9
 466 0070 02       		.byte	0x2
 467 0071 E801     		.2byte	0x1e8
 468 0073 2C000000 		.4byte	0x2c
 469 0077 04       		.uleb128 0x4
 470 0078 22020000 		.4byte	.LASF10
 471 007c 02       		.byte	0x2
 472 007d E901     		.2byte	0x1e9
 473 007f 3A000000 		.4byte	0x3a
 474 0083 02       		.uleb128 0x2
 475 0084 04       		.byte	0x4
 476 0085 04       		.byte	0x4
 477 0086 B1000000 		.4byte	.LASF11
 478 008a 02       		.uleb128 0x2
 479 008b 08       		.byte	0x8
 480 008c 04       		.byte	0x4
 481 008d F6010000 		.4byte	.LASF12
 482 0091 02       		.uleb128 0x2
 483 0092 01       		.byte	0x1
 484 0093 08       		.byte	0x8
 485 0094 D1020000 		.4byte	.LASF13
 486 0098 04       		.uleb128 0x4
 487 0099 84010000 		.4byte	.LASF14
 488 009d 02       		.byte	0x2
 489 009e 9202     		.2byte	0x292
 490 00a0 A4000000 		.4byte	0xa4
 491 00a4 05       		.uleb128 0x5
 492 00a5 6B000000 		.4byte	0x6b
 493 00a9 04       		.uleb128 0x4
 494 00aa 00000000 		.4byte	.LASF15
 495 00ae 02       		.byte	0x2
 496 00af 9302     		.2byte	0x293
 497 00b1 B5000000 		.4byte	0xb5
 498 00b5 05       		.uleb128 0x5
 499 00b6 77000000 		.4byte	0x77
 500 00ba 02       		.uleb128 0x2
 501 00bb 08       		.byte	0x8
 502 00bc 04       		.byte	0x4
 503 00bd 19030000 		.4byte	.LASF16
 504 00c1 02       		.uleb128 0x2
 505 00c2 04       		.byte	0x4
 506 00c3 07       		.byte	0x7
 507 00c4 BA020000 		.4byte	.LASF17
 508 00c8 06       		.uleb128 0x6
 509 00c9 0D000000 		.4byte	.LASF18
 510 00cd 01       		.byte	0x1
 511 00ce C7       		.byte	0xc7
 512 00cf 00000000 		.4byte	.LFB2
 513 00d3 10000000 		.4byte	.LFE2-.LFB2
 514 00d7 01       		.uleb128 0x1
 515 00d8 9C       		.byte	0x9c
 516 00d9 06       		.uleb128 0x6
 517 00da D6020000 		.4byte	.LASF19
 518 00de 01       		.byte	0x1
 519 00df E9       		.byte	0xe9
 520 00e0 00000000 		.4byte	.LFB3
 521 00e4 10000000 		.4byte	.LFE3-.LFB3
ARM GAS  C:\Users\ANDREW~1\AppData\Local\Temp\ccVPyEiU.s 			page 26


 522 00e8 01       		.uleb128 0x1
 523 00e9 9C       		.byte	0x9c
 524 00ea 07       		.uleb128 0x7
 525 00eb 81020000 		.4byte	.LASF20
 526 00ef 01       		.byte	0x1
 527 00f0 9301     		.2byte	0x193
 528 00f2 00000000 		.4byte	.LFB4
 529 00f6 0C000000 		.4byte	.LFE4-.LFB4
 530 00fa 01       		.uleb128 0x1
 531 00fb 9C       		.byte	0x9c
 532 00fc 0F010000 		.4byte	0x10f
 533 0100 08       		.uleb128 0x8
 534 0101 B7000000 		.4byte	.LASF22
 535 0105 01       		.byte	0x1
 536 0106 9301     		.2byte	0x193
 537 0108 77000000 		.4byte	0x77
 538 010c 01       		.uleb128 0x1
 539 010d 50       		.byte	0x50
 540 010e 00       		.byte	0
 541 010f 09       		.uleb128 0x9
 542 0110 5D030000 		.4byte	.LASF32
 543 0114 01       		.byte	0x1
 544 0115 A901     		.2byte	0x1a9
 545 0117 77000000 		.4byte	0x77
 546 011b 00000000 		.4byte	.LFB5
 547 011f 14000000 		.4byte	.LFE5-.LFB5
 548 0123 01       		.uleb128 0x1
 549 0124 9C       		.byte	0x9c
 550 0125 07       		.uleb128 0x7
 551 0126 95000000 		.4byte	.LASF21
 552 012a 01       		.byte	0x1
 553 012b E201     		.2byte	0x1e2
 554 012d 00000000 		.4byte	.LFB6
 555 0131 0C000000 		.4byte	.LFE6-.LFB6
 556 0135 01       		.uleb128 0x1
 557 0136 9C       		.byte	0x9c
 558 0137 4A010000 		.4byte	0x14a
 559 013b 08       		.uleb128 0x8
 560 013c 7B000000 		.4byte	.LASF23
 561 0140 01       		.byte	0x1
 562 0141 E201     		.2byte	0x1e2
 563 0143 77000000 		.4byte	0x77
 564 0147 01       		.uleb128 0x1
 565 0148 50       		.byte	0x50
 566 0149 00       		.byte	0
 567 014a 07       		.uleb128 0x7
 568 014b 89010000 		.4byte	.LASF24
 569 014f 01       		.byte	0x1
 570 0150 0402     		.2byte	0x204
 571 0152 00000000 		.4byte	.LFB7
 572 0156 0C000000 		.4byte	.LFE7-.LFB7
 573 015a 01       		.uleb128 0x1
 574 015b 9C       		.byte	0x9c
 575 015c 6F010000 		.4byte	0x16f
 576 0160 08       		.uleb128 0x8
 577 0161 31030000 		.4byte	.LASF25
 578 0165 01       		.byte	0x1
ARM GAS  C:\Users\ANDREW~1\AppData\Local\Temp\ccVPyEiU.s 			page 27


 579 0166 0402     		.2byte	0x204
 580 0168 77000000 		.4byte	0x77
 581 016c 01       		.uleb128 0x1
 582 016d 50       		.byte	0x50
 583 016e 00       		.byte	0
 584 016f 0A       		.uleb128 0xa
 585 0170 E1010000 		.4byte	.LASF26
 586 0174 01       		.byte	0x1
 587 0175 54       		.byte	0x54
 588 0176 00000000 		.4byte	.LFB1
 589 017a 3C000000 		.4byte	.LFE1-.LFB1
 590 017e 01       		.uleb128 0x1
 591 017f 9C       		.byte	0x9c
 592 0180 C9010000 		.4byte	0x1c9
 593 0184 0B       		.uleb128 0xb
 594 0185 F5020000 		.4byte	.LASF28
 595 0189 01       		.byte	0x1
 596 018a 57       		.byte	0x57
 597 018b 6B000000 		.4byte	0x6b
 598 018f 00000000 		.4byte	.LLST0
 599 0193 0C       		.uleb128 0xc
 600 0194 2A000000 		.4byte	.LVL5
 601 0198 EA000000 		.4byte	0xea
 602 019c A6010000 		.4byte	0x1a6
 603 01a0 0D       		.uleb128 0xd
 604 01a1 01       		.uleb128 0x1
 605 01a2 50       		.byte	0x50
 606 01a3 01       		.uleb128 0x1
 607 01a4 39       		.byte	0x39
 608 01a5 00       		.byte	0
 609 01a6 0C       		.uleb128 0xc
 610 01a7 30000000 		.4byte	.LVL6
 611 01ab 25010000 		.4byte	0x125
 612 01af B9010000 		.4byte	0x1b9
 613 01b3 0D       		.uleb128 0xd
 614 01b4 01       		.uleb128 0x1
 615 01b5 50       		.byte	0x50
 616 01b6 01       		.uleb128 0x1
 617 01b7 39       		.byte	0x39
 618 01b8 00       		.byte	0
 619 01b9 0E       		.uleb128 0xe
 620 01ba 36000000 		.4byte	.LVL7
 621 01be 4A010000 		.4byte	0x14a
 622 01c2 0D       		.uleb128 0xd
 623 01c3 01       		.uleb128 0x1
 624 01c4 50       		.byte	0x50
 625 01c5 01       		.uleb128 0x1
 626 01c6 35       		.byte	0x35
 627 01c7 00       		.byte	0
 628 01c8 00       		.byte	0
 629 01c9 0A       		.uleb128 0xa
 630 01ca FA020000 		.4byte	.LASF27
 631 01ce 01       		.byte	0x1
 632 01cf 37       		.byte	0x37
 633 01d0 00000000 		.4byte	.LFB0
 634 01d4 1C000000 		.4byte	.LFE0-.LFB0
 635 01d8 01       		.uleb128 0x1
ARM GAS  C:\Users\ANDREW~1\AppData\Local\Temp\ccVPyEiU.s 			page 28


 636 01d9 9C       		.byte	0x9c
 637 01da F1010000 		.4byte	0x1f1
 638 01de 0F       		.uleb128 0xf
 639 01df 0C000000 		.4byte	.LVL8
 640 01e3 6F010000 		.4byte	0x16f
 641 01e7 0F       		.uleb128 0xf
 642 01e8 16000000 		.4byte	.LVL9
 643 01ec C8000000 		.4byte	0xc8
 644 01f0 00       		.byte	0
 645 01f1 10       		.uleb128 0x10
 646 01f2 39030000 		.4byte	.LASF39
 647 01f6 01       		.byte	0x1
 648 01f7 E102     		.2byte	0x2e1
 649 01f9 6B000000 		.4byte	0x6b
 650 01fd 00000000 		.4byte	.LFB8
 651 0201 0C000000 		.4byte	.LFE8-.LFB8
 652 0205 01       		.uleb128 0x1
 653 0206 9C       		.byte	0x9c
 654 0207 1A020000 		.4byte	0x21a
 655 020b 11       		.uleb128 0x11
 656 020c 06000000 		.4byte	.LASF29
 657 0210 01       		.byte	0x1
 658 0211 E302     		.2byte	0x2e3
 659 0213 6B000000 		.4byte	0x6b
 660 0217 01       		.uleb128 0x1
 661 0218 50       		.byte	0x50
 662 0219 00       		.byte	0
 663 021a 07       		.uleb128 0x7
 664 021b FD010000 		.4byte	.LASF30
 665 021f 01       		.byte	0x1
 666 0220 FD02     		.2byte	0x2fd
 667 0222 00000000 		.4byte	.LFB9
 668 0226 0C000000 		.4byte	.LFE9-.LFB9
 669 022a 01       		.uleb128 0x1
 670 022b 9C       		.byte	0x9c
 671 022c 3F020000 		.4byte	0x23f
 672 0230 08       		.uleb128 0x8
 673 0231 BE010000 		.4byte	.LASF31
 674 0235 01       		.byte	0x1
 675 0236 FD02     		.2byte	0x2fd
 676 0238 6B000000 		.4byte	0x6b
 677 023c 01       		.uleb128 0x1
 678 023d 50       		.byte	0x50
 679 023e 00       		.byte	0
 680 023f 09       		.uleb128 0x9
 681 0240 9E020000 		.4byte	.LASF33
 682 0244 01       		.byte	0x1
 683 0245 1603     		.2byte	0x316
 684 0247 77000000 		.4byte	0x77
 685 024b 00000000 		.4byte	.LFB10
 686 024f 0C000000 		.4byte	.LFE10-.LFB10
 687 0253 01       		.uleb128 0x1
 688 0254 9C       		.byte	0x9c
 689 0255 09       		.uleb128 0x9
 690 0256 65020000 		.4byte	.LASF34
 691 025a 01       		.byte	0x1
 692 025b 3003     		.2byte	0x330
ARM GAS  C:\Users\ANDREW~1\AppData\Local\Temp\ccVPyEiU.s 			page 29


 693 025d 77000000 		.4byte	0x77
 694 0261 00000000 		.4byte	.LFB11
 695 0265 0C000000 		.4byte	.LFE11-.LFB11
 696 0269 01       		.uleb128 0x1
 697 026a 9C       		.byte	0x9c
 698 026b 09       		.uleb128 0x9
 699 026c C6010000 		.4byte	.LASF35
 700 0270 01       		.byte	0x1
 701 0271 7403     		.2byte	0x374
 702 0273 77000000 		.4byte	0x77
 703 0277 00000000 		.4byte	.LFB12
 704 027b 0C000000 		.4byte	.LFE12-.LFB12
 705 027f 01       		.uleb128 0x1
 706 0280 9C       		.byte	0x9c
 707 0281 12       		.uleb128 0x12
 708 0282 29020000 		.4byte	.LASF40
 709 0286 01       		.byte	0x1
 710 0287 20       		.byte	0x20
 711 0288 6B000000 		.4byte	0x6b
 712 028c 05       		.uleb128 0x5
 713 028d 03       		.byte	0x3
 714 028e 00000000 		.4byte	PWM_Test_Signal_initVar
 715 0292 00       		.byte	0
 716              		.section	.debug_abbrev,"",%progbits
 717              	.Ldebug_abbrev0:
 718 0000 01       		.uleb128 0x1
 719 0001 11       		.uleb128 0x11
 720 0002 01       		.byte	0x1
 721 0003 25       		.uleb128 0x25
 722 0004 0E       		.uleb128 0xe
 723 0005 13       		.uleb128 0x13
 724 0006 0B       		.uleb128 0xb
 725 0007 03       		.uleb128 0x3
 726 0008 0E       		.uleb128 0xe
 727 0009 1B       		.uleb128 0x1b
 728 000a 0E       		.uleb128 0xe
 729 000b 55       		.uleb128 0x55
 730 000c 17       		.uleb128 0x17
 731 000d 11       		.uleb128 0x11
 732 000e 01       		.uleb128 0x1
 733 000f 10       		.uleb128 0x10
 734 0010 17       		.uleb128 0x17
 735 0011 00       		.byte	0
 736 0012 00       		.byte	0
 737 0013 02       		.uleb128 0x2
 738 0014 24       		.uleb128 0x24
 739 0015 00       		.byte	0
 740 0016 0B       		.uleb128 0xb
 741 0017 0B       		.uleb128 0xb
 742 0018 3E       		.uleb128 0x3e
 743 0019 0B       		.uleb128 0xb
 744 001a 03       		.uleb128 0x3
 745 001b 0E       		.uleb128 0xe
 746 001c 00       		.byte	0
 747 001d 00       		.byte	0
 748 001e 03       		.uleb128 0x3
 749 001f 24       		.uleb128 0x24
ARM GAS  C:\Users\ANDREW~1\AppData\Local\Temp\ccVPyEiU.s 			page 30


 750 0020 00       		.byte	0
 751 0021 0B       		.uleb128 0xb
 752 0022 0B       		.uleb128 0xb
 753 0023 3E       		.uleb128 0x3e
 754 0024 0B       		.uleb128 0xb
 755 0025 03       		.uleb128 0x3
 756 0026 08       		.uleb128 0x8
 757 0027 00       		.byte	0
 758 0028 00       		.byte	0
 759 0029 04       		.uleb128 0x4
 760 002a 16       		.uleb128 0x16
 761 002b 00       		.byte	0
 762 002c 03       		.uleb128 0x3
 763 002d 0E       		.uleb128 0xe
 764 002e 3A       		.uleb128 0x3a
 765 002f 0B       		.uleb128 0xb
 766 0030 3B       		.uleb128 0x3b
 767 0031 05       		.uleb128 0x5
 768 0032 49       		.uleb128 0x49
 769 0033 13       		.uleb128 0x13
 770 0034 00       		.byte	0
 771 0035 00       		.byte	0
 772 0036 05       		.uleb128 0x5
 773 0037 35       		.uleb128 0x35
 774 0038 00       		.byte	0
 775 0039 49       		.uleb128 0x49
 776 003a 13       		.uleb128 0x13
 777 003b 00       		.byte	0
 778 003c 00       		.byte	0
 779 003d 06       		.uleb128 0x6
 780 003e 2E       		.uleb128 0x2e
 781 003f 00       		.byte	0
 782 0040 3F       		.uleb128 0x3f
 783 0041 19       		.uleb128 0x19
 784 0042 03       		.uleb128 0x3
 785 0043 0E       		.uleb128 0xe
 786 0044 3A       		.uleb128 0x3a
 787 0045 0B       		.uleb128 0xb
 788 0046 3B       		.uleb128 0x3b
 789 0047 0B       		.uleb128 0xb
 790 0048 27       		.uleb128 0x27
 791 0049 19       		.uleb128 0x19
 792 004a 11       		.uleb128 0x11
 793 004b 01       		.uleb128 0x1
 794 004c 12       		.uleb128 0x12
 795 004d 06       		.uleb128 0x6
 796 004e 40       		.uleb128 0x40
 797 004f 18       		.uleb128 0x18
 798 0050 9742     		.uleb128 0x2117
 799 0052 19       		.uleb128 0x19
 800 0053 00       		.byte	0
 801 0054 00       		.byte	0
 802 0055 07       		.uleb128 0x7
 803 0056 2E       		.uleb128 0x2e
 804 0057 01       		.byte	0x1
 805 0058 3F       		.uleb128 0x3f
 806 0059 19       		.uleb128 0x19
ARM GAS  C:\Users\ANDREW~1\AppData\Local\Temp\ccVPyEiU.s 			page 31


 807 005a 03       		.uleb128 0x3
 808 005b 0E       		.uleb128 0xe
 809 005c 3A       		.uleb128 0x3a
 810 005d 0B       		.uleb128 0xb
 811 005e 3B       		.uleb128 0x3b
 812 005f 05       		.uleb128 0x5
 813 0060 27       		.uleb128 0x27
 814 0061 19       		.uleb128 0x19
 815 0062 11       		.uleb128 0x11
 816 0063 01       		.uleb128 0x1
 817 0064 12       		.uleb128 0x12
 818 0065 06       		.uleb128 0x6
 819 0066 40       		.uleb128 0x40
 820 0067 18       		.uleb128 0x18
 821 0068 9742     		.uleb128 0x2117
 822 006a 19       		.uleb128 0x19
 823 006b 01       		.uleb128 0x1
 824 006c 13       		.uleb128 0x13
 825 006d 00       		.byte	0
 826 006e 00       		.byte	0
 827 006f 08       		.uleb128 0x8
 828 0070 05       		.uleb128 0x5
 829 0071 00       		.byte	0
 830 0072 03       		.uleb128 0x3
 831 0073 0E       		.uleb128 0xe
 832 0074 3A       		.uleb128 0x3a
 833 0075 0B       		.uleb128 0xb
 834 0076 3B       		.uleb128 0x3b
 835 0077 05       		.uleb128 0x5
 836 0078 49       		.uleb128 0x49
 837 0079 13       		.uleb128 0x13
 838 007a 02       		.uleb128 0x2
 839 007b 18       		.uleb128 0x18
 840 007c 00       		.byte	0
 841 007d 00       		.byte	0
 842 007e 09       		.uleb128 0x9
 843 007f 2E       		.uleb128 0x2e
 844 0080 00       		.byte	0
 845 0081 3F       		.uleb128 0x3f
 846 0082 19       		.uleb128 0x19
 847 0083 03       		.uleb128 0x3
 848 0084 0E       		.uleb128 0xe
 849 0085 3A       		.uleb128 0x3a
 850 0086 0B       		.uleb128 0xb
 851 0087 3B       		.uleb128 0x3b
 852 0088 05       		.uleb128 0x5
 853 0089 27       		.uleb128 0x27
 854 008a 19       		.uleb128 0x19
 855 008b 49       		.uleb128 0x49
 856 008c 13       		.uleb128 0x13
 857 008d 11       		.uleb128 0x11
 858 008e 01       		.uleb128 0x1
 859 008f 12       		.uleb128 0x12
 860 0090 06       		.uleb128 0x6
 861 0091 40       		.uleb128 0x40
 862 0092 18       		.uleb128 0x18
 863 0093 9742     		.uleb128 0x2117
ARM GAS  C:\Users\ANDREW~1\AppData\Local\Temp\ccVPyEiU.s 			page 32


 864 0095 19       		.uleb128 0x19
 865 0096 00       		.byte	0
 866 0097 00       		.byte	0
 867 0098 0A       		.uleb128 0xa
 868 0099 2E       		.uleb128 0x2e
 869 009a 01       		.byte	0x1
 870 009b 3F       		.uleb128 0x3f
 871 009c 19       		.uleb128 0x19
 872 009d 03       		.uleb128 0x3
 873 009e 0E       		.uleb128 0xe
 874 009f 3A       		.uleb128 0x3a
 875 00a0 0B       		.uleb128 0xb
 876 00a1 3B       		.uleb128 0x3b
 877 00a2 0B       		.uleb128 0xb
 878 00a3 27       		.uleb128 0x27
 879 00a4 19       		.uleb128 0x19
 880 00a5 11       		.uleb128 0x11
 881 00a6 01       		.uleb128 0x1
 882 00a7 12       		.uleb128 0x12
 883 00a8 06       		.uleb128 0x6
 884 00a9 40       		.uleb128 0x40
 885 00aa 18       		.uleb128 0x18
 886 00ab 9742     		.uleb128 0x2117
 887 00ad 19       		.uleb128 0x19
 888 00ae 01       		.uleb128 0x1
 889 00af 13       		.uleb128 0x13
 890 00b0 00       		.byte	0
 891 00b1 00       		.byte	0
 892 00b2 0B       		.uleb128 0xb
 893 00b3 34       		.uleb128 0x34
 894 00b4 00       		.byte	0
 895 00b5 03       		.uleb128 0x3
 896 00b6 0E       		.uleb128 0xe
 897 00b7 3A       		.uleb128 0x3a
 898 00b8 0B       		.uleb128 0xb
 899 00b9 3B       		.uleb128 0x3b
 900 00ba 0B       		.uleb128 0xb
 901 00bb 49       		.uleb128 0x49
 902 00bc 13       		.uleb128 0x13
 903 00bd 02       		.uleb128 0x2
 904 00be 17       		.uleb128 0x17
 905 00bf 00       		.byte	0
 906 00c0 00       		.byte	0
 907 00c1 0C       		.uleb128 0xc
 908 00c2 898201   		.uleb128 0x4109
 909 00c5 01       		.byte	0x1
 910 00c6 11       		.uleb128 0x11
 911 00c7 01       		.uleb128 0x1
 912 00c8 31       		.uleb128 0x31
 913 00c9 13       		.uleb128 0x13
 914 00ca 01       		.uleb128 0x1
 915 00cb 13       		.uleb128 0x13
 916 00cc 00       		.byte	0
 917 00cd 00       		.byte	0
 918 00ce 0D       		.uleb128 0xd
 919 00cf 8A8201   		.uleb128 0x410a
 920 00d2 00       		.byte	0
ARM GAS  C:\Users\ANDREW~1\AppData\Local\Temp\ccVPyEiU.s 			page 33


 921 00d3 02       		.uleb128 0x2
 922 00d4 18       		.uleb128 0x18
 923 00d5 9142     		.uleb128 0x2111
 924 00d7 18       		.uleb128 0x18
 925 00d8 00       		.byte	0
 926 00d9 00       		.byte	0
 927 00da 0E       		.uleb128 0xe
 928 00db 898201   		.uleb128 0x4109
 929 00de 01       		.byte	0x1
 930 00df 11       		.uleb128 0x11
 931 00e0 01       		.uleb128 0x1
 932 00e1 31       		.uleb128 0x31
 933 00e2 13       		.uleb128 0x13
 934 00e3 00       		.byte	0
 935 00e4 00       		.byte	0
 936 00e5 0F       		.uleb128 0xf
 937 00e6 898201   		.uleb128 0x4109
 938 00e9 00       		.byte	0
 939 00ea 11       		.uleb128 0x11
 940 00eb 01       		.uleb128 0x1
 941 00ec 31       		.uleb128 0x31
 942 00ed 13       		.uleb128 0x13
 943 00ee 00       		.byte	0
 944 00ef 00       		.byte	0
 945 00f0 10       		.uleb128 0x10
 946 00f1 2E       		.uleb128 0x2e
 947 00f2 01       		.byte	0x1
 948 00f3 3F       		.uleb128 0x3f
 949 00f4 19       		.uleb128 0x19
 950 00f5 03       		.uleb128 0x3
 951 00f6 0E       		.uleb128 0xe
 952 00f7 3A       		.uleb128 0x3a
 953 00f8 0B       		.uleb128 0xb
 954 00f9 3B       		.uleb128 0x3b
 955 00fa 05       		.uleb128 0x5
 956 00fb 27       		.uleb128 0x27
 957 00fc 19       		.uleb128 0x19
 958 00fd 49       		.uleb128 0x49
 959 00fe 13       		.uleb128 0x13
 960 00ff 11       		.uleb128 0x11
 961 0100 01       		.uleb128 0x1
 962 0101 12       		.uleb128 0x12
 963 0102 06       		.uleb128 0x6
 964 0103 40       		.uleb128 0x40
 965 0104 18       		.uleb128 0x18
 966 0105 9742     		.uleb128 0x2117
 967 0107 19       		.uleb128 0x19
 968 0108 01       		.uleb128 0x1
 969 0109 13       		.uleb128 0x13
 970 010a 00       		.byte	0
 971 010b 00       		.byte	0
 972 010c 11       		.uleb128 0x11
 973 010d 34       		.uleb128 0x34
 974 010e 00       		.byte	0
 975 010f 03       		.uleb128 0x3
 976 0110 0E       		.uleb128 0xe
 977 0111 3A       		.uleb128 0x3a
ARM GAS  C:\Users\ANDREW~1\AppData\Local\Temp\ccVPyEiU.s 			page 34


 978 0112 0B       		.uleb128 0xb
 979 0113 3B       		.uleb128 0x3b
 980 0114 05       		.uleb128 0x5
 981 0115 49       		.uleb128 0x49
 982 0116 13       		.uleb128 0x13
 983 0117 02       		.uleb128 0x2
 984 0118 18       		.uleb128 0x18
 985 0119 00       		.byte	0
 986 011a 00       		.byte	0
 987 011b 12       		.uleb128 0x12
 988 011c 34       		.uleb128 0x34
 989 011d 00       		.byte	0
 990 011e 03       		.uleb128 0x3
 991 011f 0E       		.uleb128 0xe
 992 0120 3A       		.uleb128 0x3a
 993 0121 0B       		.uleb128 0xb
 994 0122 3B       		.uleb128 0x3b
 995 0123 0B       		.uleb128 0xb
 996 0124 49       		.uleb128 0x49
 997 0125 13       		.uleb128 0x13
 998 0126 3F       		.uleb128 0x3f
 999 0127 19       		.uleb128 0x19
 1000 0128 02       		.uleb128 0x2
 1001 0129 18       		.uleb128 0x18
 1002 012a 00       		.byte	0
 1003 012b 00       		.byte	0
 1004 012c 00       		.byte	0
 1005              		.section	.debug_loc,"",%progbits
 1006              	.Ldebug_loc0:
 1007              	.LLST0:
 1008 0000 0A000000 		.4byte	.LVL3
 1009 0004 0E000000 		.4byte	.LVL4
 1010 0008 0100     		.2byte	0x1
 1011 000a 53       		.byte	0x53
 1012 000b 00000000 		.4byte	0
 1013 000f 00000000 		.4byte	0
 1014              		.section	.debug_aranges,"",%progbits
 1015 0000 7C000000 		.4byte	0x7c
 1016 0004 0200     		.2byte	0x2
 1017 0006 00000000 		.4byte	.Ldebug_info0
 1018 000a 04       		.byte	0x4
 1019 000b 00       		.byte	0
 1020 000c 0000     		.2byte	0
 1021 000e 0000     		.2byte	0
 1022 0010 00000000 		.4byte	.LFB2
 1023 0014 10000000 		.4byte	.LFE2-.LFB2
 1024 0018 00000000 		.4byte	.LFB3
 1025 001c 10000000 		.4byte	.LFE3-.LFB3
 1026 0020 00000000 		.4byte	.LFB4
 1027 0024 0C000000 		.4byte	.LFE4-.LFB4
 1028 0028 00000000 		.4byte	.LFB5
 1029 002c 14000000 		.4byte	.LFE5-.LFB5
 1030 0030 00000000 		.4byte	.LFB6
 1031 0034 0C000000 		.4byte	.LFE6-.LFB6
 1032 0038 00000000 		.4byte	.LFB7
 1033 003c 0C000000 		.4byte	.LFE7-.LFB7
 1034 0040 00000000 		.4byte	.LFB1
ARM GAS  C:\Users\ANDREW~1\AppData\Local\Temp\ccVPyEiU.s 			page 35


 1035 0044 3C000000 		.4byte	.LFE1-.LFB1
 1036 0048 00000000 		.4byte	.LFB0
 1037 004c 1C000000 		.4byte	.LFE0-.LFB0
 1038 0050 00000000 		.4byte	.LFB8
 1039 0054 0C000000 		.4byte	.LFE8-.LFB8
 1040 0058 00000000 		.4byte	.LFB9
 1041 005c 0C000000 		.4byte	.LFE9-.LFB9
 1042 0060 00000000 		.4byte	.LFB10
 1043 0064 0C000000 		.4byte	.LFE10-.LFB10
 1044 0068 00000000 		.4byte	.LFB11
 1045 006c 0C000000 		.4byte	.LFE11-.LFB11
 1046 0070 00000000 		.4byte	.LFB12
 1047 0074 0C000000 		.4byte	.LFE12-.LFB12
 1048 0078 00000000 		.4byte	0
 1049 007c 00000000 		.4byte	0
 1050              		.section	.debug_ranges,"",%progbits
 1051              	.Ldebug_ranges0:
 1052 0000 00000000 		.4byte	.LFB2
 1053 0004 10000000 		.4byte	.LFE2
 1054 0008 00000000 		.4byte	.LFB3
 1055 000c 10000000 		.4byte	.LFE3
 1056 0010 00000000 		.4byte	.LFB4
 1057 0014 0C000000 		.4byte	.LFE4
 1058 0018 00000000 		.4byte	.LFB5
 1059 001c 14000000 		.4byte	.LFE5
 1060 0020 00000000 		.4byte	.LFB6
 1061 0024 0C000000 		.4byte	.LFE6
 1062 0028 00000000 		.4byte	.LFB7
 1063 002c 0C000000 		.4byte	.LFE7
 1064 0030 00000000 		.4byte	.LFB1
 1065 0034 3C000000 		.4byte	.LFE1
 1066 0038 00000000 		.4byte	.LFB0
 1067 003c 1C000000 		.4byte	.LFE0
 1068 0040 00000000 		.4byte	.LFB8
 1069 0044 0C000000 		.4byte	.LFE8
 1070 0048 00000000 		.4byte	.LFB9
 1071 004c 0C000000 		.4byte	.LFE9
 1072 0050 00000000 		.4byte	.LFB10
 1073 0054 0C000000 		.4byte	.LFE10
 1074 0058 00000000 		.4byte	.LFB11
 1075 005c 0C000000 		.4byte	.LFE11
 1076 0060 00000000 		.4byte	.LFB12
 1077 0064 0C000000 		.4byte	.LFE12
 1078 0068 00000000 		.4byte	0
 1079 006c 00000000 		.4byte	0
 1080              		.section	.debug_line,"",%progbits
 1081              	.Ldebug_line0:
 1082 0000 43010000 		.section	.debug_str,"MS",%progbits,1
 1082      02004C00 
 1082      00000201 
 1082      FB0E0D00 
 1082      01010101 
 1083              	.LASF15:
 1084 0000 72656731 		.ascii	"reg16\000"
 1084      3600
 1085              	.LASF29:
 1086 0006 72657375 		.ascii	"result\000"
ARM GAS  C:\Users\ANDREW~1\AppData\Local\Temp\ccVPyEiU.s 			page 36


 1086      6C7400
 1087              	.LASF18:
 1088 000d 50574D5F 		.ascii	"PWM_Test_Signal_Enable\000"
 1088      54657374 
 1088      5F536967 
 1088      6E616C5F 
 1088      456E6162 
 1089              	.LASF38:
 1090 0024 443A5C4D 		.ascii	"D:\\Monash - Legion\\Y4S1\\ECE4191\\ECE4191-G3\\PSo"
 1090      6F6E6173 
 1090      68202D20 
 1090      4C656769 
 1090      6F6E5C59 
 1091 0052 4320636F 		.ascii	"C components\\Colour_Sensor\\TCS3200.cydsn\000"
 1091      6D706F6E 
 1091      656E7473 
 1091      5C436F6C 
 1091      6F75725F 
 1092              	.LASF23:
 1093 007b 70657269 		.ascii	"period\000"
 1093      6F6400
 1094              	.LASF3:
 1095 0082 73686F72 		.ascii	"short unsigned int\000"
 1095      7420756E 
 1095      7369676E 
 1095      65642069 
 1095      6E7400
 1096              	.LASF21:
 1097 0095 50574D5F 		.ascii	"PWM_Test_Signal_WritePeriod\000"
 1097      54657374 
 1097      5F536967 
 1097      6E616C5F 
 1097      57726974 
 1098              	.LASF11:
 1099 00b1 666C6F61 		.ascii	"float\000"
 1099      7400
 1100              	.LASF22:
 1101 00b7 636F756E 		.ascii	"counter\000"
 1101      74657200 
 1102              	.LASF1:
 1103 00bf 756E7369 		.ascii	"unsigned char\000"
 1103      676E6564 
 1103      20636861 
 1103      7200
 1104              	.LASF36:
 1105 00cd 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1105      43313120 
 1105      352E342E 
 1105      31203230 
 1105      31363036 
 1106 0100 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 1106      20726576 
 1106      6973696F 
 1106      6E203233 
 1106      37373135 
 1107 0133 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 1107      66756E63 
ARM GAS  C:\Users\ANDREW~1\AppData\Local\Temp\ccVPyEiU.s 			page 37


 1107      74696F6E 
 1107      2D736563 
 1107      74696F6E 
 1108              	.LASF37:
 1109 015b 47656E65 		.ascii	"Generated_Source\\PSoC5\\PWM_Test_Signal.c\000"
 1109      72617465 
 1109      645F536F 
 1109      75726365 
 1109      5C50536F 
 1110              	.LASF14:
 1111 0184 72656738 		.ascii	"reg8\000"
 1111      00
 1112              	.LASF24:
 1113 0189 50574D5F 		.ascii	"PWM_Test_Signal_WriteCompare\000"
 1113      54657374 
 1113      5F536967 
 1113      6E616C5F 
 1113      57726974 
 1114              	.LASF5:
 1115 01a6 6C6F6E67 		.ascii	"long unsigned int\000"
 1115      20756E73 
 1115      69676E65 
 1115      6420696E 
 1115      7400
 1116              	.LASF9:
 1117 01b8 75696E74 		.ascii	"uint8\000"
 1117      3800
 1118              	.LASF31:
 1119 01be 636F6E74 		.ascii	"control\000"
 1119      726F6C00 
 1120              	.LASF35:
 1121 01c6 50574D5F 		.ascii	"PWM_Test_Signal_ReadPeriod\000"
 1121      54657374 
 1121      5F536967 
 1121      6E616C5F 
 1121      52656164 
 1122              	.LASF26:
 1123 01e1 50574D5F 		.ascii	"PWM_Test_Signal_Init\000"
 1123      54657374 
 1123      5F536967 
 1123      6E616C5F 
 1123      496E6974 
 1124              	.LASF12:
 1125 01f6 646F7562 		.ascii	"double\000"
 1125      6C6500
 1126              	.LASF30:
 1127 01fd 50574D5F 		.ascii	"PWM_Test_Signal_WriteControlRegister\000"
 1127      54657374 
 1127      5F536967 
 1127      6E616C5F 
 1127      57726974 
 1128              	.LASF10:
 1129 0222 75696E74 		.ascii	"uint16\000"
 1129      313600
 1130              	.LASF40:
 1131 0229 50574D5F 		.ascii	"PWM_Test_Signal_initVar\000"
 1131      54657374 
ARM GAS  C:\Users\ANDREW~1\AppData\Local\Temp\ccVPyEiU.s 			page 38


 1131      5F536967 
 1131      6E616C5F 
 1131      696E6974 
 1132              	.LASF8:
 1133 0241 756E7369 		.ascii	"unsigned int\000"
 1133      676E6564 
 1133      20696E74 
 1133      00
 1134              	.LASF7:
 1135 024e 6C6F6E67 		.ascii	"long long unsigned int\000"
 1135      206C6F6E 
 1135      6720756E 
 1135      7369676E 
 1135      65642069 
 1136              	.LASF34:
 1137 0265 50574D5F 		.ascii	"PWM_Test_Signal_ReadCompare\000"
 1137      54657374 
 1137      5F536967 
 1137      6E616C5F 
 1137      52656164 
 1138              	.LASF20:
 1139 0281 50574D5F 		.ascii	"PWM_Test_Signal_WriteCounter\000"
 1139      54657374 
 1139      5F536967 
 1139      6E616C5F 
 1139      57726974 
 1140              	.LASF33:
 1141 029e 50574D5F 		.ascii	"PWM_Test_Signal_ReadCapture\000"
 1141      54657374 
 1141      5F536967 
 1141      6E616C5F 
 1141      52656164 
 1142              	.LASF17:
 1143 02ba 73697A65 		.ascii	"sizetype\000"
 1143      74797065 
 1143      00
 1144              	.LASF6:
 1145 02c3 6C6F6E67 		.ascii	"long long int\000"
 1145      206C6F6E 
 1145      6720696E 
 1145      7400
 1146              	.LASF13:
 1147 02d1 63686172 		.ascii	"char\000"
 1147      00
 1148              	.LASF19:
 1149 02d6 50574D5F 		.ascii	"PWM_Test_Signal_Stop\000"
 1149      54657374 
 1149      5F536967 
 1149      6E616C5F 
 1149      53746F70 
 1150              	.LASF2:
 1151 02eb 73686F72 		.ascii	"short int\000"
 1151      7420696E 
 1151      7400
 1152              	.LASF28:
 1153 02f5 6374726C 		.ascii	"ctrl\000"
 1153      00
ARM GAS  C:\Users\ANDREW~1\AppData\Local\Temp\ccVPyEiU.s 			page 39


 1154              	.LASF27:
 1155 02fa 50574D5F 		.ascii	"PWM_Test_Signal_Start\000"
 1155      54657374 
 1155      5F536967 
 1155      6E616C5F 
 1155      53746172 
 1156              	.LASF4:
 1157 0310 6C6F6E67 		.ascii	"long int\000"
 1157      20696E74 
 1157      00
 1158              	.LASF16:
 1159 0319 6C6F6E67 		.ascii	"long double\000"
 1159      20646F75 
 1159      626C6500 
 1160              	.LASF0:
 1161 0325 7369676E 		.ascii	"signed char\000"
 1161      65642063 
 1161      68617200 
 1162              	.LASF25:
 1163 0331 636F6D70 		.ascii	"compare\000"
 1163      61726500 
 1164              	.LASF39:
 1165 0339 50574D5F 		.ascii	"PWM_Test_Signal_ReadControlRegister\000"
 1165      54657374 
 1165      5F536967 
 1165      6E616C5F 
 1165      52656164 
 1166              	.LASF32:
 1167 035d 50574D5F 		.ascii	"PWM_Test_Signal_ReadCounter\000"
 1167      54657374 
 1167      5F536967 
 1167      6E616C5F 
 1167      52656164 
 1168              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
